[
    {
        "title": "Organiser et optimiser les fichiers javascript d&#039;une application Frontend avec npm et Browserify",
        "slug": "/2016/08/organiser-et-optimiser-les-fichiers-javascript-dune-application-frontend-avec-npm-et",
        "teaser": "Ayant eu à développer une application AngularJS dernièrement, je te propose une manière d'organiser et de traiter le code de manière un peu plus efficace que de tout fourrer dans un seul et même fichier Javascript. Le début d'un projet de développement web implique effectivement quelques réflexions préliminaires quant à l'arborescence du code, s'il y a lieu de mettre en place un task runner pour automatiser certaines procédures, quel outil de gestion des dépendances utiliser, etc. ",
        "body": "<p>Cet article devra pouvoir te permettre, je l'espère, de mettre en place une application frontend. C'est pas vraiment un tutoriel à suivre, mais plutôt un article de compréhension générale parce que j'ai l'impression que c'est ce genre d'information qui manque sur le web. Ici, c'est AngularJS qui sera utilisé mais en pratique tu peux utiliser d'autres frameworks frontend.</p>\n<h2>Introduction</h2>\n<p>Contrairement à certains systèmes backend écrits en Java ou en PHP, la plupart des frameworks frontend ne te forcent pas à utiliser un cycle de développement prédéfini. Avec Laravel (PHP) par exemple, l'arborescence est déjà établie (les contrôleurs ou les modèles par exemple ont leur dossier attribué) et on a des outils comme artisan et gulp qui permettent de gérer des tâches respectivement en backend et en frontend. Tu ne te poses pas de questions, il suffit de coder (et de bricoler quand la structure ne convient pas tout à fait).</p>\n<p>AngularJS, pour sa part, est écrit en Javascript. La philosophie de ce langage est un peu différente de celle d'un language backend typique : en gros, on fait ce qu'on veut. Ça implique évidemment des risques du grand n'importe quoi, mais au final tu peux être trèèèès créatif, ce qui est plutôt cool pour faire des applications un peu innovantes. AngularJS est un framework qui propose des méchanismes très intéressants, mais pas de structure et d'organisation de code. C'est pour ça que tu trouveras, sur le web, une tonne d'exemples et de tutos avec des applications qui ne font qu'un fichier (app.js).</p>\n<p>Ce qu'on va étudier dans cet article, c'est la sortie de ce concept de mono-fichier pour pouvoir construire quelque chose de modulaire et de flexible. On utilisera la notation CommonJS avec Browserify, on lancera des scripts npm pour compiler et minifier des fichiers.</p>\n<h2>Dépendances externes</h2>\n<p>Dans mon cas, l'installation de toutes les librairies s'est faite avec npm. C'est un gestionnaire de dépendances très populaire pour le développement backend avec nodeJS mais quasiment toutes les dépendances frontend sont également disponibles.</p>\n<h2>Système modulaire</h2>\n<p>Le réflexe qu'on trouve dans la plupart des tutos lorsqu'il s'agit de structurer les fichiers sources d'une application est de séparer les fonctions techniques (vues, contrôleurs, services, directives, etc.) dans des dossiers distincts. Ceci fonctionne bien lorsque l'application est simple et qu'elle ne propose que quelques fonctionnalités. Dès qu'on dépasse cette étape, il devient judicieux de coder avec des modules \"métiers\".</p>\n<p>Ci-dessous, la structure du code par fonction technique.</p>\n<pre>\napp/\n---- controllers/\n-------- mainController.js\n-------- otherController.js\n---- directives/\n-------- mainDirective.js\n-------- otherDirective.js\n---- services/\n-------- userService.js\n-------- itemService.js\n---- app.js\nviews/\n---- mainView.html\n---- otherView.html\n---- index.html\nnode_modules/\n</pre><p>\nC'est effectivement pratique quand t'as une petite application avec tout au plus trois ou quatre contrôleurs. Dès qu'on commence à dépasser ce stade, tu t'en sors plus dès qu'il faut chercher, ajouter ou désactiver une fonctionnalité. On va donc réorganiser notre code comme ça:</p>\n<pre>\nangular-app/\n---- modules/\n-------- core/\n------------ directive.js\n------------ routes.js\n------------ services.js\n------------ ...\n-------- admin/\n-------- apicall/\n-------- .../\n---- app.js\npublic/\n---- assets/\n---- views/\n---- index.html\ntheme/\n---- sass/\n---- theme.js\nnode_modules/\n</pre><p>\nComme tu peux le voir, on a deux aspects dans une application frontend: le fonctionnel et le visuel. Le code source de ces éléments est situé respectivement dans les dossiers <code>angular-app</code> et <code>theme</code>.</p>\n<h2>Compilation du code</h2>\n<p><strong>Ou comment éviter d'avoir à charger moult fichiers dans le template html</strong></p>\n<p>L'idée ici est de réutiliser les paradigmes de la programmation compilée. Bien que Javascript reste techniquement un langage interprété directement par le navigateur, on va <em>concaténer</em> puis <em>minifier</em> le code, on peut ainsi (par abus de langage certes) appeler cela de la compilation.</p>\n<h3>Concaténation CommonJS</h3>\n<p>La concaténation consiste à ajouter bout à bout le contenu de plusieurs sources, que ce soit des chaînes ou des fichiers textes. Ce sont ces derniers qui vont être concaténés dans notre cas pour avoir au final qu'un seul fichier <code>bundle.js</code> dans le dossier <code>public/</code>.</p>\n<p>Pour ce faire, on aurait la solution bête et facile d'utiliser... <code>cat</code>, l'utilitaire bash, avec <code>find</code> pour trouver les fichiers à traiter. Ça pourrait fonctionner mais on perd l'aspect <em>modulaire</em> de l'histoire. On va donc utiliser la notation CommonJS avec Browserify, afin de pouvoir coder comme dans NodeJS.</p>\n<p>On crée les modules CommonJS ainsi :</p>\n<pre class='language-javascript'>\nvar module = { };\n// export du module\nmodule.exports = module;\n</pre><p>\net on les réutilise comme ça: </p>\n<pre class='language-javascript'>\nvar module = require('./module');\n</pre><p>\nCa permet au final d'avoir un fichier <code>app.js</code> qui appelle d'autres fichiers, qui eux-mêmes en appellent d'autres, etc. La modularité est là : tu veux désactiver un module, il suffit de commenter la ligne correspondante au chargement du module (le <code>require()</code>).</p>\n<p>Browserify est un utilitaire permettant de comprendre le concept CommonJS et de créer un seul fichier avec tous les appels intégrés, même ceux aux dépendances externes tels qu'AngularJS.</p>\n<p>Lorsqu'on utilise <code>require('./nomduDossier')</code>, c'est le fichier <code>index.js</code> qui est recherché dans ce dossier. Tes modules peuvent donc tous avoir la même structure avec un fichier <code>index.js</code> qui est le point d'entrée du module, pouvant faire appel à des directives ou à des contrôleurs par exemple.</p>\n<p>Un des avantages de Browserify est qu'il ne charge les fichier requis par require() qu'une seule fois même s'il apparaît à plusieurs endroits différents dans le code.</p>\n<p>Voilà un exemple d'un des fichiers <code>index.js</code> :</p>\n<pre class='language-javascript'>\nvar dependencies = []; // liste des dépendances\nrequire('angular')\n    // Création d'un module 'monmodule' avec ses dépendances\n    .module('monmodule', dependencies)\n    // Ajout d'une directive\n    .directive('moduleMyDirective', [require('./my.directive')]);\n</pre><p>\nIl faudra donc créer un dossier s'appelant <code>my.directive</code> avec un fichier <code>index.js</code>, ou alors directement un fichier <code>my.directive.js</code> (l'extension n'est pas obligatoire avec <code class='language-javascript'>require()</code>).</p>\n<h3>Minification</h3>\n<p>Une fois passé dans la moulinette browserify, le code peut être relativement lourd. On peut enlever les espaces blancs et les retours à la ligne pour gagner un peu de place, mais il est également possible de le rendre illisible par l'humain. <code>maBelleFonctionQuiAUnNomARallonge(parametre1, parametre2, parametre3)</code> peut simplement être traduit par <code>a(b,c,d)</code>, et c'est là qu'on gagne le plus d'octets. C'est le concept de l'<em>uglify</em>. Le fichier minifié et uglifyié (oui...) pourra ainsi s'appeler <code>bundle.min.js</code>.</p>\n<p>Pour débugger l'application, vu que le code ne veut plus rien dire, tu peux passer des paramètres de <em>mapping</em> à l'utilitaire de minification, afin d'avoir un fichier bundle.map. Ce fichier map est utilisé par les navigateur pour accéder au code original, mais n'est chargé que si c'est nécessaire, donc pas pour les visiteurs du site.</p>\n<h2>Rendre ces tâches automatiques avec <code>npm</code></h2>\n<p>Pour éviter d'effectuer ces différentes tâches à la main, deux logiciels principaux permettent leur automatisation : Grunt et Gulp. Ce sont les <em>Task Runners</em> les plus connus actuellement. Tu peux aussi utiliser npm, et ainsi, étant donné que ce dernier est déjà installé et qu'il fait très bien le travail, on va utiliser l'utiliser pour éviter l'installation d'autres dépendances.</p>\n<p>Ça fonctionne sous forme de scripts. On va donc créer ces derniers dans le fichier <code>package.json</code>, dans la section <code>scripts</code>:</p>\n<pre class='language-javascript'>\n\"scripts\": {\n        \"build-js\": \"browserify -t browserify-ngannotate angular-app/app.js --debug | exorcist public/assets/js/bundle.js.map &gt; public/assets/js/bundle.js\",\n        \"build-min-js\": \"browserify -t browserify-ngannotate angular-app/app.js -p [minifyify --no-map] &gt; public/assets/js/bundle.min.js\",\n },\n</pre><p>\n<code>exorcist</code> est utilitaire permettant de sortir le fichier map.js du fichier bundle.js, parce que le debug par défaut l'inclut et ça fait un fichier final très lourd. Je me dépêche d'écrire cet article parce que quelques mécanismes peuvent être améliorés avec Angular2 et on pourra en profiter pour en écrire un autre.</p>\n<p>Au final, on a un fichier de base dans le dossier <code>angular-app</code>, qui appelle d'autres modules dans ce dossier et des dépendances externes. Ce fichier, grâce à Browserify, est concaténé dans un fichier bundle.js, qui lui-même est passé dans la machine de minification. Au final, on <em>exorcise</em> le fichier et en sortent un fichier <code>bundle.min.js</code> prêt à l'emploi et un fichier <code>bundle.map</code>.</p>\n<h2>Le futur est brillant</h2>\n<p>Angular2 apporte beaucoup de nouveautés en terme de performance et de fonctionnalités et est notamment compatible avec la nouvelle version de Javascript, ou plus justement d'ECMAScript, mais demande un petit temps d'adaptation pour le développeur. Angular2 permet également l'utilisation de NativeScript, un système utilisé pour créer des <a href=\"https://www.smashingmagazine.com/2016/07/cross-platform-native-apps-single-code-set-telerik-nativescript/\">applications mobiles Android et IOS natives</a>.</p>\n<p>Une des fonctionnalités très attendue par la communauté de développeurs dans la nouvelle version de la norme – nommée ES6 ou encore ES2015 – est le système de gestion de modules. Une syntaxe finale pour l'import et l'export de fonctionnalités entre les fichiers a été mise en place et il pourrait être intéressant d'utiliser ce concept pour remplacer le système modulaire du couple CommonJS/Browserify. Ceci permettrait d'optimiser grandement la minification du code grâce au concept de <a href=\"https://www.linkedin.com/pulse/forget-browserify-webpack-embrace-rollupjs-michel-ruffieux?trk=prof-post\">Tree-Shaking</a> (on garde que les fonctionnalités utilisées) de la libraire <a href=\"http://rollupjs.org\">rollup.js</a>. Il faudrait néanmoins revoir la manière d'installer des dépendances externes.</p>\n",
        "cat": "Web",
        "pub_date": "2016-08-31T15:04:57+02:00",
        "tags": "AngularJS,frontend,browserify,CommonJS,npm,javascript",
        "lang": "fr",
        "id": "139"
    },
    {
        "title": "Archlinux: s&#039;en sortir avec des dépendances de Python dans tous les sens",
        "slug": "/2016/08/archlinux-sen-sortir-avec-des-dépendances-de-python-dans-tous-les-sens",
        "teaser": "Il y a plusieurs moyens d'installer des dépendances python avec Archlinux et il peut ainsi y avoir des problèmes de conflits, de versions, de base de données pas à jour, etc. Voici des pistes pour s'en sortir !",
        "body": "<p>Ce post explique ma démarche au nettoyage de dépendances python sur Archlinux. Elle ne convient pas forcément à tout le monde, alors gare !</p>\n<p>Dans ma quête d'installation de <code>pulseaudio-dlna</code> (permettant d'utiliser une Chromecast comme <em>renderer</em> audio, j'ai eu des petits problèmes de compilation. Ayant fait quelques recherches, j'ai découvert qu'il s'agissait sûrement de dépendances introuvables installées par <strong>Pip</strong>.</p>\n<p>Je me suis dit mais tiens, pourquoi ai-je des paquets installés avec Pip ? J'ai rien demandé. Ça vient sûrement du fait que je connais pas du tout le monde de Python et que j'ai du copier-coller des commandes un peu au hasard. </p>\n<p>Tout ça pour dire que généralement, il vaut mieux passer par le <em>Package manager</em> du système au lieu d'utiliser une application tierce, bien qu'elle soit utile. Sur Archlinux, grâce au dépôt AUR, il y a la grande majorité des paquets python, Pip n'est pratiquement pas requis pour mon utilisation.</p>\n<p>J'ai donc décidé de supprimer tous les paquets qui ont été installés par Pip. La commande <code>pip freeze</code> va nous aider à faire ça (<a href=\"http://askubuntu.com/questions/173323/how-do-i-detect-and-remove-python-packages-installed-via-pip\">source</a>). Avec un peu de bashing, on obtient la commande permettant de les déinstaller d'un coup: </p>\n<pre>$ pip freeze | sed 's/\\=/\\:/g' | cut -d: -f1 | xargs sudo pip uninstall -y </pre><p>\nAttention, cela désinstalle uniquement les paquets python3, il faut donc également faire: </p>\n<pre>$ pip2.7 freeze | sed 's/\\=/\\:/g' | cut -d: -f1 | xargs sudo pip2.7 uninstall -y </pre><p>\nBon. faire cela a cassé certains de mes programmes, parce que certaines librairies étaient évidemment requises:</p>\n<pre>ImportError: The 'packaging.requirements' package is required; normally this is bundled with this package so if you get this warning, consult the packager of your distribution.</pre><p>\nCe qui est \"marrant\", c'est qu'ils sont jugés comme installés par le système de paquets Archlinux. En utilisant <code>pacman -Qd</code> on peut voir ce qui est installé: </p>\n<pre>$ pacman -Qd | grep python</pre><p>\nIl s'agit donc de tout réinstaller ? On va pas s'embêter: </p>\n<pre>yaourt -Qqd | grep python | xargs yaourt -S --noconfirm</pre><p>\nTu remarqueras que j'ai remplacé <code>pacman</code> par <code>yaourt</code>, ce qui permet d'avoir également les paquets dans AUR.</p>\n<p>Suite à ça, j'ai pu installer <code>pulseaudio-dlna</code> sans aucun problème.</p>\n",
        "cat": "Linux, Logiciel libre",
        "pub_date": "2016-08-30T07:42:43+02:00",
        "tags": "archlinux,linux,bash,aur,pacman",
        "lang": "fr",
        "id": "138"
    },
    {
        "title": "Et si on utilisait Drupal uniquement comme Backend  ?",
        "slug": "/2015/07/et-si-on-utilisait-drupal-uniquement-comme-backend",
        "teaser": "Le monde du développement web est de plus en plus compliqué avec des nouvelles technologies qui sortent toutes les semaines quasiment. Ceci est un billet avant tout de réflexion, qui traite des notions de frontend et de backend, de Drupal, de webservices, de méthodes de travail. Comment est-ce qu’on pourrait faire mieux ? Est-ce qu’on peut coupler la facilité de Drupal et les performances, par exemple, d’AngularJS ?",
        "body": "<h2>Backend et Frontend</h2>\n<p>On va commencer par une petite explication préliminaire simplifiée sur les notions de frontend et de backend.</p>\n<p>Par backend, on entend le ou les systèmes permettant de traiter, de récupérer et de sauvegarder des informations dans une base de données. Il n’y a souvent pas d’interface prévue pour l’humain dans ce cas, mais la sortie est adaptée pour le frontend.</p>\n<p>Par frontend, on entend le fait d’afficher ces mêmes données à un utilisateur d’un site, mais aussi de lui permettre d’intéragir avec. Il est possible d’avoir un frontend pour ajouter du contenu. C’est le frontend qui va faire l’interface entre le backend et l’utilisateur.</p>\n<h3>Backend et Frontend dans Drupal</h3>\n<p>Dans Drupal 7, on a tendance à parler de l’admin comme étant le backend : un autre thème, une autre interface, utilisée par les responsables du site pour administrer le site. Le frontend sera utile aux visiteurs du site, car c’est là qu’ils verront le thème “corporate”, les blocs de navigation, le contenu mis en forme et, par exemple, la possibilité d’ajouter des commentaires.</p>\n<p>Techniquement, Drupal est construit d’une manière à ne pas séparer complétement le backend et le frontend. Les nuances se situent dans le thème et dans les modules. Les templates (<code>.tpl.php</code>) ainsi que les traditionnels fichiers CSS et JS font partie du frontend, et le backend se situerait dans le fichiers <code>.module</code> - avec ses inclusions - ou dans le fichier <code>template.php</code> dans le cas d’un thème. C’est pas très clair ? Voilà exactement où je veux en venir. Le développement frontend et le développement backend sont deux spécialisations différentes qui ne sont pas séparées complétement dans Drupal.</p>\n<h2>Ben et Lucie<br /><h2>\n</h2></h2><p>Dans la suite, notre développeur frontend s’appelle <strong>Ben</strong>, et notre développeuse backend <strong>Lucie</strong>.</p>\n<p>Ben s’occupe de l’interface, il discute avec les designers pour faire une intégration graphique propre en ordre en utilisant Sass et Less s’il en a la possibilité. Il gére les tailles de fenêtres, et fait du responsive design car il connait les viewport sizes des périphériques mobiles. Il se spécialise dans des framework javascript et connait par coeur les spécifications des navigateurs. Il discute tous les jours avec Lucie pour obtenir les données dans un format qu’il pourra utiliser. Voici <a href=\"https://css-tricks.com/front-end-development-is-development/\">un super article (EN)</a> qui met un peu à plat ce que représente Ben fait de nos jours.</p>\n<p>Lucie pour sa part aime les algorithmes, sait que MariaDB est un fork de MySQL, connait les avantages de PostgreSQL et est en train de se dire que CouchDB, c’est vachement bien en fait. Elle a étudié le Java et le PHP mais découvre le Javascript coté serveur. Elle utilise des systèmes d’abstraction pour faire des requêtes vers des bases de données, mais en fait pour certaines choses bien précises c’est peut-être mieux de faire sans. Elle déteste le CSS et dit que c’est un truc pour artiste, parce qu’elle, son résultat, elle aime le fournir en JSON dans un service REST (ça sera expliqué par la suite).</p>\n<h2>La problématique Drupal</h2>\n<p>Un développeur Drupal est quelqu’un qu’on pourrait qualifier, dans un certain sens, de développeur <em>Full Stack</em>. C’est à dire qu’il fait à la fois du backend et du frontend. Les développeurs Full Stack ne sont parfois pas très bien vus dans la communauté des développeurs car selon certains, ils connaissent trop de choses pour être efficaces dans un domaine bien précis. Mais bon, ceci n’est point le débat. Il est certes possible de faire travailler Ben et Lucie dans le même projet: Ben code ses templates et dans le même dossier, Lucie va programmer la logique dans les fichiers <code>.modules</code> et <code>.inc</code>. C’est théoriquement possible, mais pas du tout efficace, le code de l’un est trop dépendant du code de l’autre, et les deux doivent connaitre Drupal.</p>\n<h2>Les webservices</h2>\n<p>Cette dépendance entre le backend et le frontend est bien connue dans le développement web et n’est pas uniquement problématique avec Drupal. Dès qu’on veut construire quelque chose de bien spécifique et de professionnel, il faut commencer à séparer et à organiser son code, et à développer des méthodologies de travail.</p>\n<p>La problématique été résolue en partie notamment avec l’apparition  des webservices. Il s’agit de méthodes permettant de faire transiter des données d’un système à un autre, d’un serveur à un autre. Le service REST, à la mode aujourd’hui, permet de créer, d’accéder, de modifier et de supprimer des ressources via des requêtes HTTP. Bien souvent, c’est le format <a href=\"https://fr.wikipedia.org/wiki/JavaScript_Object_Notation\">JSON  (Javascript Object Notation)</a> qui sera utilisé pour transmettre les données afin de simplifier la vie de Ben, qui connait bien le Javascript et pourra utiliser ses données telles quelles sans les modifier.</p>\n<p>L’accès au service REST se fera par une URL et un verbe parmi les suivants : POST (ajouter), GET (obtenir), PUT (modifier), DELETE (supprimer). Ils correspondant à l’acronyme <accronym title=\"Create, Read, Update, Delete\">CRUD </accronym>. Le client, dans notre cas le code javascript de Ben, fera par exemple une requête GET sur <a href=\"http://monservicerest.org/clients\">http://monservicerest.org/clients</a> pour obtenir une liste des clients, techniquement un tableau d’objets javascript. En fonction du code à Lucie, il pourra également ajouter des clients avec un POST, afficher uniquement le client avec l’id 42, afficher uniquement le nom du client avec l’âge du directeur et son repas préféré, etc.</p>\n<p>On aura donc Ben et Lucie, en communication sur leurs besoins respectifs bien sûr, mais travaillant de manière autonome sur leurs propres projets. Ils sont indépendants technologiquement, et ça, c’est vraiment trop bien.</p>\n<h2>Et avec Drupal ?</h2>\n<p>Comment rendre indépendants Ben et Lucie sur un projet Drupal ? La solution que j’avance ici serait d’utiliser Drupal comme backend uniquement pour l’authentification, la gestion de contenu (types de contenu, taxonomie, etc.), l’administration en général, et d’utiliser… Drupal Services : <a href=\"https://www.drupal.org/project/services\">https://www.drupal.org/project/services</a>. Ce qui est trop beau, c’est que c’est <a href=\"https://drupalize.me/blog/201401/introduction-restful-web-services-drupal-8\">déjà inclus dans Drupal 8</a> !</p>\n<p>Ben sera donc libre d’utiliser le framework de son choix, de créer un frontend digne de ce nom pour ses utilisateurs, complétement indépendant de Drupal. Les administrateurs et les éditeurs de contenu auraient toujours une interface Drupal, parce que bon, c’est tout de même un des points forts de cet outil à mon avis : la gestion du contenu. Lucie n’aura pas à faire de templating ni de CSS, car l’administration de Drupal est déjà faite. Elle n’aura à priori qu’à coder ses modules en toute tranquilité et à exposer le contenu au service REST.</p>\n<h2>Aller encore plus loin</h2>\n<p>Les grandes questions qui se posent maintenant sont de savoir si c’est pertinent, si ça a déjà été fait pour des gros projets, ou si le module Services de Drupal n’est fait que pour être utilisé accessoirement à des fins complémentaires.</p>\n<p>Cette approche permet une séparation des rôles tout en gardant Drupal comme outil de gestion de contenu. On gagne du temps avec Drupal sur certains types de projet, c’est un fait, malheureusement il n’est pas toujours aisé d’avoir un site très performant car Drupal, dans sont ensemble et avec tous ses modules (backend et frontend mélangés), n’est pas léger. Le concept de ne garder que le meilleur de Drupal et d’utiliser d’autres outils comme <a href=\"http://backbonejs.org/\">Backbone.js</a> ou <a href=\"https://angularjs.org/\">AngularJS</a> comme frontend permet non seulement d’avoir une interface utilisateur moderne mais également indépendante des compétences Drupal du développeur, et de ce fait, le code est également beaucoup plus maintenable et transposable dans le cas où on déciderait de changer de backend pour une quelconque raison.</p>\n<p>Pour certains projets, on pourrait même aller plus loin : Non content des performances de traitement de Drupal, un développeur PHP pourrait greffer un framework  de son choix (Laravel, Symfony?) sur la base de données crée par Drupal et créer un service REST lui-même.</p>\n<p>Les administrateurs du site entrent du contenu dans Drupal, auraient accès à du site building standard, avec la gestion des types de contenu, de la taxonomie, des utilisateurs. Une fois le contenu dans une base de données, un framework complétement différent (même pas forcément en PHP) prend le relais et expose cette dernière dans un service REST créé sur mesure en fonction des besoins du frontend.</p>\n<p>Une complication que je pourrais voir de prime abord est la gestion des ACL, mais rien n’est impossible… La discussion est ouverte.</p>\n",
        "cat": "Web",
        "pub_date": "2015-07-30T16:00:31+02:00",
        "tags": "Drupal,AngularJS,BackboneJS,développement web,frontend,backend",
        "lang": "fr",
        "id": "133"
    },
    {
        "title": "L&#039;autodérision commerciale, un exemple instructif",
        "slug": "/2015/01/lautodérision-commerciale-un-exemple-instructif",
        "teaser": "C'est peut-être un peu risqué, mais ils ont osé et réussi leur coup. La vidéo auto-parodique de Dissolve ouvre de nouveaux horizons au marketing Viral.",
        "body": "<p>J'avoue, elle date un peu. Mais c'est beau ! </p>\n<p><a href=\"http://www.dissolve.com/showreels/this-is-a-generic-brand-video\">http://www.dissolve.com/showreels/this-is-a-generic-brand-video</a></p>\n<iframe width=\"100%\" height=\"415\" src=\"//www.youtube.com/embed/2YBtspm8j8M?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p>\nOn se croirait presque dans un <a href=\"https://www.youtube.com/watch?v=Io0-xkLqYHA\">spot publicitaire de BP</a>. Le concept est simple: Dissolve présente ses produits: ils vendent du <em>stock footage</em>, c'est à dire des bouts de films \"génériques\" qui peuvent être utilisés vraiment n'importe comment et n'importe où, tant que la musique derrière est sympa à écouter. L'entreprise a réussi le pari de présentant ses produits en parodiant les spots publicitaires de ses clients.</p>\n<p>A mon avis, ils ont pris le risque pour une raison bien particulière : la nature même de leur concept. Ils présentent sur le site non seulement des clips, mais également leur concept \"Get Ideas\", un endroit communautaire où les créatifs peuvent présenter leur savoir-faire, particulièrement pratique pour s'inspirer et pour... <em>get ideas</em>. Du coup, on voit déjà que c'est pas un site comme Fotolia. On dirait presque qu'en fait, ils ont fait cette parodie pour critiquer une partie de leurs clients qui faisaient des publicités bateau à la va-vite. Du coup, ça les démarque de la concurrence en ciblant leurs produits vers des gens <em>vraiment</em> créatifs (enfin, c'est à voir), qui perdraient leur gêne à utiliser des clips tout prêts. Parce que c'est bien connu, un créatif de base ne s'autoriserait jamais à acheter un clip alors qu'il peut le tourner avec son 7D Mark II ... Bref. On a ici un exemple parfait d'une entreprise qui désire se forger une image moderne plutôt que de mettre en avant juste son contenu.</p>\n<p>Dans le même concept, on avait, il y a longtemps, une superbe vidéo du redesign du package de l'iPod par Microsoft. C'était à l'époque où Vista pointait le bout de son nez (~2006), voici un article intéressant sur cette autoparodie:<br /><a href=\"http://www.branddrivendigital.com/the-divine-art-of-self-parody/\">http://www.branddrivendigital.com/the-divine-art-of-self-parody/</a></p>\n",
        "cat": "Web",
        "pub_date": "2015-01-23T11:32:48+01:00",
        "tags": "marketing",
        "lang": "fr",
        "id": "124"
    },
    {
        "title": "Le crowdfunding de jeu vidéo le plus fructueux de tous les temps",
        "slug": "/2015/01/le-crowdfunding-de-jeu-vidéo-le-plus-fructueux-de-tous-les-temps",
        "teaser": "Dans le crowdfunding, on trouve vraiment de tout. Rien que sur Kickstarter, des centaines de projets se bousculent, notamment au niveau des jeux vidéos. Je vais parler aujourd'hui du seul jeu pour lequel j'ai donné de l'argent alors qu'il n'est pas encore sorti.",
        "body": "<p><em style=\"font-size: 0.8em\">Credit images : <a href=\"http://www.robertsspaceindustries.com\">http://www.robertsspaceindustries.com</a></em></p>\n<p>De plus en plus de jeux vidéos indépendants voient le jour, notamment grâce à la dématérialisation, c'est à dire le fait de ne plus avoir besoin de support physique (CD-ROM, DVD-ROM) pour pouvoir lancer le jeu (en même temps, qui a encore un lecteur CD-ROM ?). Le développement en est simplifié, et la chaîne de distribution se restreint grandement. Grâce à des plateformes comme Kickstarter, des personnes peuvent commencer à développer un jeu, le présenter sur la plateforme et proposer à la communauté de participer financièrement. Plus d'éditeur, moins de restrictions. Et si le jeu plait, il survit. C'est vraiment trop bien.</p>\n<p>Un de ces jeux est sorti du lot. Alors que la plupart des jeux vidéos réussissant par le biais du financement participatif pourraient être qualifiés de \"petits jeux indépendants\" (il y en a d'ailleurs plus d'une centaine disponibles sur la plateforme Steam), celui-ci fait fort. Il a explosé les scores en obtenant près de 2 millions de dollars (au lieu des 500'000 requis), rien que sur la plateforme Kickstarter. Et sur cette dernière, <a href=\"https://www.kickstarter.com/projects/cig/star-citizen/posts/331705\">le tiers du but a été obtenu en près de 24 heures</a>. Mais ça ne s'arrête pas là ! Le projet s'est déconnecté de Kickstarter et continue encore aujourd'hui de recevoir des dons, cette fois directement depuis leur propre site web, et sont, aujourd'hui, à près de <strong>septante millions de dollars</strong> ! </p>\n<p style=\"text-align:center\"><a href=\"http://loutre.ch/sites/default/files/starcitizen_logo1.png\" title=\"Star citizen\" class=\"colorbox colorbox-insert-image\" rel=\"gallery-all\"><img style=\"border:none;\" typeof=\"foaf:Image\" src=\"http://loutre.ch/sites/default/files/styles/thumbnail/public/starcitizen_logo1.png?itok=9bEfdzHe\" alt=\"Star citizen logo\" title=\"Star citizen\" class=\"image-thumbnail\" /></a></p>\n<p>Il s'agit de <strong>Star Citizen</strong>, un projet de <a href=\"http://en.wikipedia.org/wiki/Chris_Roberts_(game_developer)\">Chris Roberts</a>, connu (enfin, tout est relatif) pour les jeux de la franchise <a href=\"http://en.wikipedia.org/wiki/Wing_Commander_(franchise)\">Wing Commander</a>.</p>\n<p>Plus d'informations concernant Star Citizen se trouvent sur le site de <a href=\"http://www.robertspaceindustries.com\">Roberts Space Industries (RSI)</a>. Oui, Chris a crée sa propre entreprise virtuelle dans le jeu et en a fait un site web. Et pis alors ? RSI, dans le jeu, <a href=\"https://robertsspaceindustries.com/pledge/ships?manufacturer_id[]=1\">est un fabricant de vaisseaux</a> parmi d'autres.</p>\n<p>Mais comment expliquer cette stratégie marketing à succès ? Qu'est-ce qui motive le grand public à investir de l'argent dans ce jeu ? Voici quelques idées en vrac.</p>\n<dl><dt>Un jeu de niveau AAA \"indépendant\"</dt>\n<dd>\nOn entend par <em>indépendant</em> un jeu n'ayant pas d'éditeur commercial qui soutient financièrement le jeu. Le fait d'avoir un éditeur derrière son dos peut certes être avantageux au niveau <em>revenu</em> mais Star Citizen profite de ne pas avoir pour proposer du contenu de haute qualité car il n'a que peu de pression quant à la date de sortie du jeu en version finale. Chris Roberts adopte le moto <em>When it's ready</em>, ce qui empêche la publication du jeu lorsqu'il n'est pas encore terminé (petit clin d'oeil à <a href=\"https://www.google.ch/search?q=assassins+creed+bug&amp;num=20&amp;hl=en&amp;site=imghp&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ei=hb2_VL7dF4L0UPnbghA&amp;ved=0CAgQ_AUoAQ&amp;biw=1341&amp;bih=705&amp;dpr=1.4\">Assassin's creed</a>).<br /></dd>\n<dt>Une communauté engagée et une communication ouverte</dt>\n<dd>Chaque semaine, une demi douzaine d'articles apparaissent sur le site web de Star Citizen. Les mises à jour fréquentes du jeu en lui-même (<a href=\"https://robertsspaceindustries.com/project-status\">déjà  partiellement jouable</a> dans une version alpha accessible aux <em>backers</em>) permettent également à la communauté de tester le jeu en continu ainsi que de proposer des améliorations et de rapporter des bugs. La communauté a son mot à dire également au niveau de l'histoire du monde de Star citizen, ce que les designers du jeu appellent le \"Lore Builder\". Chaque semaine également, Chris Roberts répond par vidéo à une dizaine de questions posées par la communauté.</dd>\n<dt>La valeur ajoutée pour le \"backer\"</dt>\n<dd>Donner de l'argent à l'organisation ne veut pas juste dire \"je donne de l'argent car j'aime ce produit\". Des récompenses en découlent, sous forme principalement de vaisseaux. Plus le montant du ou des dons est élevé, plus grand et puissant le vaisseau offert sera. Est-ce qu'on peut dire de ce fait que l'on achète un vaisseau virtuel ? C'est effectivement conçu de cette manière, le site officiel possédant un \"<a href=\"https://robertsspaceindustries.com/pledge\">Pledge store</a>\". Il ne sera toutefois plus possible de faire un don pour une vaisseau une fois le jeu finalisé. Il s'agit en quelque sorte une contribution à la satisfaction des besoins du donateur, qui consistent, pour le moment encore, à avoir un superbe vaisseau dans son Hangar, ainsi que d'optimiser son expérience de jeu dans Arena Commander (pour une vingtaine de vaisseaux actuellement).</dd>\n</dl><div style=\"float:right; width: 300px; margin-left: 1em; border-top: 2px solid black; border-bottom: 2px solid black; padding: 0.5em; font-size: 0.8em;\">\n<iframe style=\"margin: 0 auto\" width=\"100%\" height=\"170px\" src=\"//www.youtube.com/embed/NrrvPBrm03w\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><em>Le nouveau trailer d'Arena Commander</em>\n</p></div>\n<p>Grâce à cela, la communauté se fait caresser dans le sens du poil et de ce fait se sent plus soudée que jamais. Le site web est extrêmement bien fait et permet notamment de créer des organisations internes au jeu, même avant sa sortie officielle (prévue en 2016 si tout va bien).</p>\n<p>Malheureusement (vive la communauté Internet !), il apparaît le <em>fanboyisme</em>, ce fameux concept où l'ont a pas le droit d'aimer quelque chose sans se faire detester par ceux qui n'aime pas. Chacun trouve ses arguments pour défendre ou insulter le projet, mais la stratégie marketing a indubitablement fonctionné, et elle fonctionne toujours d'ailleurs, et tant mieux pour les <em>fanboys</em>.</p>\n",
        "cat": "Jeux vidéos",
        "pub_date": "2015-01-22T16:35:01+01:00",
        "tags": "starcitizen,marketing,crowdfunding",
        "lang": "fr",
        "id": "123"
    },
    {
        "title": "Archlinux: Supprimer les paquets inutilisés",
        "slug": "/2015/01/archlinux-supprimer-les-paquets-inutilisés",
        "teaser": "Les paquets inutilisés sont en général des dépendances qui ont été installées pour assouvir le besoin d'un paquet, mais ce dernier ayant été mis à jour ou supprimé, la dépendance ne sert plus à rien.",
        "body": "<p>Voici une simple commande à taper en root: </p>\n<pre># pacman -Rns $(pacman -Qqtd)</pre>",
        "cat": "",
        "pub_date": "2015-01-02T11:36:12+01:00",
        "tags": "",
        "lang": "fr",
        "id": "122"
    },
    {
        "title": "Drush et alwaysdata",
        "slug": "/2014/12/drush-et-alwaysdata",
        "teaser": "Comment utiliser drush sur l'hébergeur alwaysdata (entre autres).",
        "body": "<p><a href=\"https://www.alwaysdata.com/\">Alwaysdata</a> est un hébergeur mutualisé. Tes fichiers sont donc dans un répertoire protégé des autres utilisateurs du même serveur, mais il n'y a aucune séparation physique ni même virtuelle entre les dossiers de ces derniers et le tien. L'avantage, entre autres, de cet hébergeur, c'est qu'il est assez orienté geek, c'est à dire qu'on peut se connecter en SSH, lancer des commandes <a href=\"http://git-scm.com/\">GIT</a>, utiliser des trucs comme Ruby, etc. tout en restant mutualisé (et ainsi pas trop cher). Le serveur étant donc forcément inaccessible en root, il va falloir donc être un petit peu inventif (ou suivre la doc, ça marche aussi) pour installer drush de manière fonctionnelle avec nos droits.</p>\n<p>Tu vas donc te connecter en ssh sur le serveur que tu veux administrer (remplace user par le nom de ton compte alwaysdata). Attention, pour que ça marche il faut que le ssh soit activé dans l'interface d'administration.</p>\n<pre>$ ssh user@ssh.alwaysdata.com</pre><p>\nUne fois sur le serveur, crée un répertoire <code>bin</code></p>\n<pre>$ mkdir bin</pre><p>\nCe répertoire va nous servir à ajouter des binaires et des scripts exécutables, qui seront automatiquement pris en compte par le terminal. Pour faire cela, on va ajouter ce dossier dans notre variable <code>$PATH</code>: </p>\n<pre>$ echo \"PATH=$PATH:$HOME/bin\" &gt;&gt; .profile</pre><p>\nLe fichier <code>.profile</code> est lu à chaque fois qu'on ouvre une session Linux, donc tout va bien. Au lieu de se déconnecter et de se reconnecter, on peut recharger le fichier avec <code>$ source ~/.profile</code>.Voilà, tout est prêt, on passer aux choses marrantes maintenant.</p>\n<p>Il faut que tu installes <strong>composer</strong> (nécessaire, à priori, à l'installation des nouvelles versions de drush, et ça simplifie grandement la vie): </p>\n<pre>curl -sS https://getcomposer.org/installer | php -- --install-dir=bin</pre><p>\nCa va te créer un super fichier <code>composer.phar</code> dans ton répertoire <code>bin</code>. Youpie ! Donc composer est installé. Tu peux maintenant télécharger drush. Sois sûr d'être dans ton répertoire personnel (ou ailleurs mais attention à la suite) et : </p>\n<pre>$ git clone https://github.com/drush-ops/drush.git</pre><p>\nSi tout va bien, tu auras maintenant un dossier <code>drush</code>, contenant un fichier exécutable du même nom. Pour lancer drush par la suite, il faudra faire un lien de ce fichier <code>drush</code> vers ton repertoire bin : </p>\n<pre>$ cd ~/bin\n$ ln -s ~/drush/drush .</pre><p>\nC'est l'heure d'installer <strong>drush</strong> avec <strong>composer</strong> (ici en version 7).</p>\n<pre>$ cd ~/drush\n$ composer global require drush/drush:7.*\n$ composer install</pre><p>\nS'il y a un problème, essaie de faire</p>\n<pre>$ composer update</pre><p>\nTerminay ! \\o/ Teste avec <code>$ drush --version</code>.</p>\n<p>Source: <a href=\"http://drush.org/en/master/install/\">http://drush.org/en/master/install/</a></p>\n",
        "cat": "Linux, Web",
        "pub_date": "2014-12-17T20:27:27+01:00",
        "tags": "Hébergement,drush,Drupal,Alwaysdata",
        "lang": "fr",
        "id": "121"
    },
    {
        "title": "Memo: La géniale propriété CSS3 &#039;text-overflow&#039;",
        "slug": "/2014/07/memo-la-géniale-propriété-css3-text-overflow",
        "teaser": "Toujours révé de faire une ellipse après un texte beaucoup trop long qui n'en finit plus et dont la fin ne (...)",
        "body": "<p>C'est possible !</p>\n<p>Grâce à la balise CSS3 <code>text-overflow</code>. Elle permet de définir comment le texte doit se \"clipper\" lorsqu'il est trop long. Par défaut, le texte va juste déborder, ou agrandir la boite qui le contient.<br />\n Pour faire fonctionner cela, il faut également définir <code>overflow:hidden</code> et <code>whitespace: nowrap</code>.</p>\n<p>Voici un exemple, appliqué sur une balise <code>div</code> avec la classe <code>ellipsis</code>.</p>\n<pre>\ndiv.ellipsis {\n  overflow:hidden;\n  white-space:nowrap;\n  text-overflow:ellipsis;\n}</pre><p>Exemple:</p>\n<p style=\"overflow:hidden; white-space:nowrap; width: 60%;text-overflow: ellipsis\">Voici une phrase qui prend 60% de la largeur du conteneur, Le boeuf ne peut pas pousser la charrue, c'est bien connu n'est-ce pas</p>\n<p>A la place d'utiliser <code>ellipsis</code>, tu peux utiliser d'autres caractères entre guillements :</p>\n<pre>\ndiv.ellipsis {\n  text-overflow: \"[...]\";\n}</pre><p>\nPlus d'infos: <a href=\"http://www.w3schools.com/cssref/css3_pr_text-overflow.asp\">http://www.w3schools.com/cssref/css3_pr_text-overflow.asp</a></p>\n",
        "cat": "Web",
        "pub_date": "2014-07-04T11:16:28+02:00",
        "tags": "CSS,CSS3",
        "lang": "fr",
        "id": "114"
    },
    {
        "title": "Drupal 7 : Texte brut et retours à la ligne ?",
        "slug": "/2014/06/drupal-7-texte-brut-et-retours-à-la-ligne",
        "teaser": "Utiliser le format de texte brut (Plain Text) dans drupal dans un champ texte long peut-être extrêmement pratique pour empêcher aux utilisateurs de faire n&#39;importe quoi. Il manque pourtant, par défaut, la possibilité de faire des retours à la ligne.",
        "body": "<p>Pour pallier ce problème, il faut juste rajouter la chose suivante dans le fichier template.php de ton thème :</p>\n<pre>\nfunction nomdutheme_preprocess_field(&amp;$variables, $hook) {\n  if(($variables['element']['#field_type'] == 'text_long' || $variables['element']['#field_type'] == 'text_with_summary') &amp;&amp; $variables['element']['#items'][0]['format'] == null) {\n    $variables['items'][0]['#markup'] = nl2br($variables['items'][0]['#markup']);\n  }\n}</pre><p>en remplaçant <code>nomdutheme</code> par le nom machine de ton thème.</p>\n<p> </p>\n<p><a href=\"http://bri-space.com/content/preserving-line-breaks-using-plain-text-processing-drupal-7\">Source</a></p>\n",
        "cat": "Web",
        "pub_date": "2014-06-20T11:03:37+02:00",
        "tags": "Drupal,format texte,filtres",
        "lang": "fr",
        "id": "113"
    },
    {
        "title": "Rapport Final Agur2012 - moderniser le droit d&#039;auteur",
        "slug": "/2013/12/rapport-final-agur2012-moderniser-le-droit-dauteur",
        "teaser": "Il est gros et va peut-être valoir la peine de le lire. Le rapport est disponible depuis le 20 décembre en français.Agur12 est un groupe qui a dans ses buts d&#39;adapter le droit d&#39;auteur à l&#39;ère d&#39;Internet.",
        "body": "<p>Le groupe Agur12 vient de publier son rapport, après plus d'une année de travail, sur l'état du droit d'auteur par rapport aux \"nouvelles technologies\" et leur évolution.</p>\n<p>Il préconise plusieurs choses, dont une qui nous concerne : les internautes ne seront pas poursuivis . On garde donc l'état actuel des choses : téléchargement d'oeuvres copyrightées reste légal, et l'upload d'oeuvres copyrightées reste illégal).</p>\n<p>Un extrait du communiqué:</p>\n<blockquote><p>Aux yeux des artistes et des producteurs, les entreprises qui exploitent des sites pirates à des fins commerciales représentent la principale source d'inquiétude en termes de piratage. Elles constituent une concurrence déloyale aux offres légales et parviennent à rester hors d'atteinte grâce à un choix judicieux de leur implantation ou par le recours au brouillage technique. C'est pourquoi le groupe de travail propose que les fournisseurs d'accès à Internet (FAI) établis en Suisse soient tenus, dans les cas graves, de bloquer sur ordre des autorités l'accès aux portails Web proposant des contenus provenant de sources manifestement illégales par le biais du verrouillage des adresses IP et DNS. Les autorités compétentes doivent toutefois empêcher, dans la mesure du possible, le blocage des contenus licites en même temps que celui des contenus illicites (overblocking) et porter l'ensemble des mesures de verrouillage, qui ne doivent pas entraver le fonctionnement technique des systèmes IP et DNS, à la connaissance du public de manière adéquate.</p></blockquote>\n<ul><li>Plus d'infos: <a href=\"http://www.romandie.com/news/n/CHDroit_d_auteur_le_groupe_AGUR12_propose_de_bloquer_les_sites_pirates53061220131731.asp\">http://www.romandie.com/news/n/CHDroit_d_auteur_le_groupe_AGUR12_propose...</a></li>\n<li>Télécharger le communiqué aux médias : <a href=\"https://www.ige.ch/fileadmin/user_upload/Urheberrecht/f/Medienmitteilung_zum_Schlussbericht_AGUR12_FR.pdf\">https://www.ige.ch/fileadmin/user_upload/Urheberrecht/f/Medienmitteilung...</a></li>\n<li>Télécharger le rapport : <a href=\"https://www.ige.ch/fileadmin/user_upload/Urheberrecht/f/Rapport_final_AGUR12_du_28_novembre_2013_F.pdf\">https://www.ige.ch/fileadmin/user_upload/Urheberrecht/f/Rapport_final_AG...</a></li>\n</ul><p> </p>\n",
        "cat": "",
        "pub_date": "2013-12-28T13:50:00+01:00",
        "tags": "Droit d&#039;auteur,Loi",
        "lang": "fr",
        "id": "112"
    },
    {
        "title": "Ghostery, pour ne plus vous faire traquer (enfin, tracker).",
        "slug": "/2013/12/ghostery-pour-ne-plus-vous-faire-traquer-enfin-tracker",
        "teaser": "Pour la protection de la vie privée sur les sites.",
        "body": "<p>Comment est-ce que des organisations comme Disqus fonctionnent, financièrement parlant ? La publicité n'est pas obligatoirement visible dans les commentaires, et le service est gratuit. On peut résumer les choses à ça : le trafic de données. Par exemple, pour toi qui est toujours sur Facebook, savais-tu que les boutons like sur les sites n'ont même pas besoin d'être cliqués pour pour enregistrer ta visite ?</p>\n<p><img alt=\"Ghostery logo\" src=\"/sites/default/files/ghostery_logo.png\" style=\"float:left; height:282px; width:237px\" title=\"Ghostery logo\" />Ghostery est une extension pour ton navigateur qui te permet de <strong>connaître</strong> les services et les widgets actifs sur une page, afin de pouvoir les <strong>contrôler</strong>. Au moment où j'écris ces lignes, il y a 1780 trackers connus dans la base de donnée de Ghostery, et ça augmente, de quoi stopper la majorité des choses.</p>\n<p>Evidemment, tous les services ne sont pas à bloquer. Ça serait dommage de ne plus pouvoir commenter sur un site parce qu'on bloque le widget Disqus ou Facebook. Mais, si comme moi il fut un temps, tu es en cure de désintox Facebook, cette extension permet de bloquer tout ce qui est lié au service, pour ne plus le voir omniprésent sur quasiment tous les sites un tant soit peu commerciaux.</p>\n<p>Pour installer Ghostery, rends-toi sur les pages correspondantes à ton navigateur.</p>\n<ul><li><strong>Firefox:</strong> <a href=\"https://addons.mozilla.org/en-US/firefox/addon/ghostery/\">https://addons.mozilla.org/en-US/firefox/addon/ghostery/</a></li>\n<li><strong>Chromium (Chrome):</strong> <a href=\"https://chrome.google.com/webstore/detail/ghostery/mlomiejdfkolichcflejclcbmpeaniij\">https://chrome.google.com/webstore/detail/ghostery/mlomiejdfkolichcflejc...</a></li>\n<li><strong>Opera:</strong> <a href=\"http://addons.opera.com/en/extensions/details/ghostery/‎\">http://addons.opera.com/en/extensions/details/ghostery/‎</a></li>\n</ul><p>J'en profites pour signaler que sur loutre.ch, il y a un tracker <strong>Google Analytics </strong>et un<strong> widget Disqus</strong>, ainsi qu'un truc <strong>ScoreCard Research Beacon</strong> (ça vient avec Disqus) que je t'invite à bloquer :) -- <a href=\"http://www.ghostery.com/apps/scorecard_research_beacon\">http://www.ghostery.com/apps/scorecard_research_beacon</a></p>\n<p> </p>\n<p><a href=\"http://velinov.deviantart.com/art/Ghost-council-of-Orzhova-340447180\">Credit Photo</a></p>\n",
        "cat": "Web",
        "pub_date": "2013-12-18T11:34:14+01:00",
        "tags": "Ghostery,Extension,Firefox,Opera,chrome,Chromium,Facebook,Vie privée",
        "lang": "fr",
        "id": "111"
    },
    {
        "title": "Client mail pour Linux: Geary enfin utilisable",
        "slug": "/2013/11/client-mail-pour-linux-geary-enfin-utilisable",
        "teaser": "Ami jeune, réjouis toi : Geary, le client mail newschool bien à la mode, est depuis quelques temps devenu assez mature pour une utilisation journalière.\r\n",
        "body": "<p>Marre de la lourdeur de <em>Thunderbird</em> ? De l'usine à gaz <em>Evolution</em> ? Pour apporter un peu de fraicheur à toutes ces interfaces email qu'on pourrait qualifier de désuettes, essaye donc Geary !</p>\n<p>Il avait des petits problèmes de jeunesse (notamment des plantages) il y a quelque temps, mais il est maintenant tout à fait utilisable en production. Il ne faut toutefois pas encore trop lui en demander, il manque notamment des choses classiques comme la gestion des signatures et on pourrait lui reprocher ses options de personnalisation un peu simplettes.</p>\n<p>Il adopte la nouvelle mise en page \"à la <em>Outlook</em>\", en trois colonnes : une pour les comptes, une autre pour les messages avec l'expediteur, le sujet et le début du message et une pour le message selectionné. Disponible (version 0.4) dans les repositories Ubuntu 13.10, il suffit de l'installer soit via la logitèque Ubuntu soit en ligne de commande:</p>\n<pre>\nsudo apt-get install geary</pre><p><a class=\"colorbox colorbox-insert-image\" href=\"http://loutre.ch/sites/default/files/gearyabout.png\" rel=\"gallery-all\"><img alt=\"\" class=\"image-medium\" src=\"http://loutre.ch/sites/default/files/styles/medium/public/gearyabout.png?itok=1aM618LH\" /></a></p>\n<h5>Plus d'infos:</h5>\n<p><a href=\"http://www.yorba.org/projects/geary/\">http://www.yorba.org/projects/geary/</a></p>\n<p><a href=\"http://www.omgubuntu.co.uk/2013/10/geary-0-4-released-with-new-look-new-features\">http://www.omgubuntu.co.uk/2013/10/geary-0-4-released-with-new-look-new-...</a></p>\n<p> </p>\n",
        "cat": "Linux",
        "pub_date": "2013-11-30T15:44:32+01:00",
        "tags": "Geary,Ubuntu,Email",
        "lang": "fr",
        "id": "108"
    },
    {
        "title": "Problème de z-index avec les videos Youtube",
        "slug": "/2013/08/problème-de-z-index-avec-les-videos-youtube",
        "teaser": "Ce problème se manifeste lorsqu&#39;on a une video sur une page avec un menu déroulant, ou une fenêtre modale. La video (flash pouerk) se met par dessus le menu, même si la règle z-index est bien gérée.&nbsp;\r\n",
        "body": "<p>Si tu as ce problème (et qui, en général, arrive sur Chrom(e)(ium) et IE, mais pas sur Firefox), voici une solution très simple à implémenter.</p>\n<p>Il suffit d'exécuter ce code jquery :</p>\n<pre>\n$(document).ready(function (){\n  $('iframe').each(function() {\n    var url = $(this).attr(\"src\");\n    if ($(this).attr(\"src\").indexOf(\"?\") &gt; 0) {\n      $(this).attr({\n        \"src\" : url + \"&amp;wmode=transparent\",\n        \"wmode\" : \"Opaque\"\n      });\n    }\n    else {\n      $(this).attr({\n        \"src\" : url + \"?wmode=transparent\",\n        \"wmode\" : \"Opaque\"\n     });\n    }\n  });\n});</pre><p>Ce code ajoute le paramètre &amp;wmode=transparent à l'attribut src ainsi que wmode=\"opaque\" en tant qu'attribut à toutes les balises iframe de la page.</p>\n<p> </p>\n<p>Merci à <a href=\"http://stackoverflow.com/questions/9074365/youtube-video-embedded-via-iframe-ignoring-z-index\" style=\"line-height: 1.538em;\">stackoverflow</a> et à <a href=\"http://www.enhancedif.org\">EIF</a> chez qui j'ai corrigé le problème.</p>\n",
        "cat": "Web",
        "pub_date": "2013-08-07T15:26:46+02:00",
        "tags": "jQuery,iframe,youtube,z-index,CSS",
        "lang": "fr",
        "id": "105"
    },
    {
        "title": "Un thé au musée Giger",
        "slug": "/2013/07/un-thé-au-musée-giger",
        "teaser": "Buvons un thé.",
        "body": "",
        "cat": "Photographie, Voyage",
        "pub_date": "2013-07-10T10:41:30+02:00",
        "tags": "thé,Giger,photo",
        "lang": "fr",
        "id": "103"
    },
    {
        "title": "Participation au concours Noir &amp; Blanc sur Popularoid",
        "slug": "/2013/02/participation-au-concours-noir-blanc-sur-popularoid",
        "teaser": "EDIT: Le site Popularoid ayant fermé ses portes (Regarde le cache de Google), visiblement pour des raisons de triche et de problèmes de catégorisations de photo ou je ne sais quoi, il ne va évidemment plus être possible de voter.. Ach, schade.",
        "body": "<p>Je participe au concours du mois \"Noir &amp; Blanc\" sur Popularoid, avec une photo prise toute fin d'année 2011 lors de notre excursion au Sud Lipez, Bolivie. Have a look :)</p>\n",
        "cat": "Photographie, Voyage",
        "pub_date": "2013-02-07T11:29:45+01:00",
        "tags": "Bolivie",
        "lang": "fr",
        "id": "100"
    },
    {
        "title": "Memo: activer le &#039;touchpad natural scrolling&#039; (défilement inversé) sur Ubuntu 12.10",
        "slug": "/2013/02/memo-activer-le-touchpad-natural-scrolling-défilement-inversé-sur-ubuntu-1210",
        "teaser": "EDIT 2013 : Depuis Ubuntu 13.04, cette option est directement disponible dans les préférences du touchpad.Tu sais, c&#39;est la grande révolution de OSX. Et vu qu&#39;on est à la mode, voici trois méthodes pour l&#39;activer.",
        "body": "<p>Plusieurs possibilités.</p>\n<p>1) Ubuntu Tweak</p>\n<p>Ubuntu Tweak doit être installé après avoir ajouté les sources PPA :</p>\n<pre>\nsudo add-apt-repository ppa:tualatrix/ppa\nsudo apt-get update\nsudo apt-get install ubuntu-tweak</pre><p>Une fois installé, l'option se trouve dans <strong>Ajustments</strong> -&gt; <strong>Divers</strong> -&gt; <strong>Sens de défilement naturel</strong></p>\n<p>2) ~/.Xmodmap</p>\n<p>Modifier le fichier ~/.Xmodmap en ajoutant tappant la commande suivante : </p>\n<pre>\necho \"pointer = 1 2 3 5 4 7 6 8 9 10 11 12\" &gt; ~/.Xmodmap &amp;&amp; xmodmap ~/.Xmodmap</pre><p>Cette commande ajoute la ligne pointer... dans le fichier .Xmodmap (il le crée s'il n'existe pas) et recharge le fichier. Remarque que c'est le fait d'échanger le le 5 et le 4 qui active le scroll inverse.</p>\n<p>3) Xinput</p>\n<p>C'est à priori la seule méthode qui permet de sélectionner un device unique, pour éviter d'activer le scroll inverse sur la souris par exemple. Première étape, afficher tous les device :</p>\n<pre>\nxinput list</pre><p>La deuxième colonne affichée liste des <strong>id</strong>. Choisir l'id correspondant au périphérique souhaité. Ensuite, on lance la commande</p>\n<pre>\nxinput set-button-map <strong>&lt;id&gt;</strong> 1 2 3 5 4 6 7 8 9 10 11 12</pre><p>en remplaçant <strong>&lt;id&gt;</strong> par le numéro souhaité. </p>\n<p>Tu peux ajouter cette ligne au fichier<strong> ~/.profile </strong>pour rendre les modifications permanentes. Elles seront appliquées à chaque ouverture de session pour l'utilisateur courant.</p>\n",
        "cat": "Linux",
        "pub_date": "2013-02-04T11:50:32+01:00",
        "tags": "Souris,Touchpad,Ubuntu,xinput,Xmodmap,Ubuntu Tweak",
        "lang": "fr",
        "id": "99"
    },
    {
        "title": "Concours photo - Lamas sur la Laguna Colorada en Bolivie",
        "slug": "/2013/02/concours-photo-lamas-sur-la-laguna-colorada-en-bolivie",
        "teaser": "Après avoir terminé le site photographe-voyageur.com, je participe au concours ! Oubliez pas de voter pour moi&nbsp;&nbsp;!",
        "body": "",
        "cat": "Photographie, Voyage",
        "pub_date": "2013-02-01T13:36:04+01:00",
        "tags": "Bolivie,Lama,Alpaga,Laguna Colorada",
        "lang": "fr",
        "id": "98"
    },
    {
        "title": "Script bash d&#039;instanciation de Drupal (ou autre) sur LAMP (ou autre)",
        "slug": "/2012/09/script-bash-dinstanciation-de-drupal-ou-autre-sur-lamp-ou-autre",
        "teaser": "Dans le cadre de mon travail chez Linalis, j'ai souvent affaire à des créations d'instances de sites Drupal sur le serveur de développement distant (et en local aussi). Sans vouloir installer de logiciel lourd de déployement, les actions répétitives qui sont utilisées pour instancier un nouveau site sont tout bonnement inacceptables pour tout bon fainéant que nous (je) sommes (suis). Voilà donc un petit script basique que j'ai développé qui pallie ce problème.",
        "body": "<p>Ce script permet plusieurs choses:</p>\n<ol><li>Création des dossiers et des <em>virtual hosts</em> correspondants Apache2</li>\n<li>Création de la base de données MySQL</li>\n<li>Installation de Drupal</li>\n</ol><p><strong>Avertissement</strong> : Ce script est encore en phase de test. A utiliser à tes risques et périls, je ne serai pas responsable si un incendie se propage dans la salle des serveurs.</p>\n<h3>Prérequis</h3>\n<p>Avant de commencer, les prérequis ! Nous avons besoin de :</p>\n<ul><li>Debian ou Ubuntu (testé et fonctionnel avec configuration basique d'Apache2). Il y a peut-être des incompatibilités avec d'autres distributions, je ne sais pas, j'ai pas testé.</li>\n<li>Apache2 fonctionnel</li>\n<li>Un accès root</li>\n<li>MySQL. Si tu veux installer une base, il te faudra un utilisateur mysql et son mot de passe. Son mot de passe sera écrit en clair dans le fichier de configuration, n'utilise pas l'utilisateur root !</li>\n<li>Drush (<strong>Dru</strong>pal <strong>Sh</strong>ell), utilisé pour l'installation de Drupal: <a href=\"http://drupal.org/node/1248790\">http://drupal.org/node/1248790</a></li>\n<li>Éventuellement <strong>git</strong>, pour télécharger les fichiers<br /><pre>$ apt-get install git</pre></li>\n</ul><ul><li>Un éditeur texte</li>\n<li>Le script SiteInstanciator !<br /><pre>$ git clone git://github.com/michaelz/SiteInstanciator.git<br /></pre></li>\n</ul><p>Accessible ici également: <a href=\"https://github.com/michaelz/SiteInstanciator\">https://github.com/michaelz/SiteInstanciator</a></p>\n<h3>Configuration</h3>\n<p>SiteInstanciator se configure dans un fichier de configuration nommé <strong>siteinstanciator.cfg</strong>. C'est simplement une liste de variables qui sera chargée au début de l'exécution du script.</p>\n<p>Première chose à faire, rentrer dans le dossier SiteInstanciator tout fraîchement installé et copier le fichier <strong>siteinstanciator_default.cfg</strong> vers <strong>siteinstanciator.cfg</strong>.</p>\n<pre>$ cd SiteInstanciator<br />$ cp siteinstanciator_default.cfg siteinstanciator.cfg</pre><p>Ensuite, édite le fichier de configuration fraîchement copié.  Voici une définition des variables principales.</p>\n<ul><li>SERVERHOST: où les sites sont hébergés. Il sera utilisé pour définir l'url d'accès au site, par exemple \"dev.monserveur.ch\" donnera \"nomdusite.dev.monserveur.ch\" ;</li>\n<li>SERVERADMIN: Plus ou moins interne à Apache. C'est le mail où les messages venant d'Apache2 seront envoyés, en fonction de sa configuration ;</li>\n<li>DEVPATH: C'est le chemin (sans / à la fin !) où les dossiers sont créés. D'habitude, on mettra <strong>/var/www</strong> ou <strong>/var/www/htdocs</strong>. On peut également imaginer un truc comme <strong>/home/user/www</strong> si on est le seul utilisateur de la machine ;</li>\n<li>LOGPATH: Le chemin des logs d'apache, avec A2ERRORLOG et A2TRANSFERLOG, on peut choisir où exactement ;</li>\n<li>A2FILE: Le chemin du fichier de configuration du virtual host. Ce script est prévu pour fonctionner avec un seul fichier qui s'appelle par défaut $SERVEURHOST, ou \"dev.monserveur.ch\" dans notre exemple ;</li>\n<li>DBDEVUSER: l'utilisateur mysql que tu as créé durant le prérequis ;</li>\n<li>DBDEVPW: son mot de passe ;</li>\n<li>DBDEVPREFIX: un préfixe aux bases de données (ne pas confondre avec les préfixes de <em>tables</em> !). La base de données s'appelera par défaut <strong>db_nomdusite</strong>. J'ai défini ce préfixe pour qu'on voie au premier coup d'oeil quels sont les sites qui ont été créés par SiteInstanciator.</li>\n</ul><p>On a fait le tour.</p>\n<h3>Utilisation</h3>\n<pre>$ cd SiteInstanciator<br />$ sudo ./siteinstanciator.sh nomdusite</pre><p>Ceci va créer un site au nom de \"nomdusite\". Il va te poser plein de questions, enfin, il faudra surtout répondre à des (Y/N) pour qu'il continue à s'executer. </p>\n<p>Si tu veux ajouter une base de données, il te faut connaître le mot de passe de l'utilisateur root de MySQL. Il n'y a dans mon script pas encore de boucle qui permet de vérifier le mot de passe, et s'il est faux, il y aura une erreur et le script s'arrêtera. Alors sois sûr !</p>\n<p>À la fin du script, si tu acceptes d'installer Drupal, drush te donnera le mot de passe du compte <strong>admin</strong>.</p>\n<p>Après la première utilisation, il sera sûrement nécessaire à Apache2 d'activer le fichier défini dans la variable A2FILE.</p>\n<pre>$ sudo a2enfile /etc/apache2/sites-available/dev.monserveur.ch</pre><p>où <strong>dev.monserveur.ch</strong> est défini dans la configuration dans la variable SERVEURHOST.</p>\n<p>Et après chaque utilisation cette fois, un redémarrage ou un reload du service apache2 est obligatoire.</p>\n<p>Sur Debian:</p>\n<pre>sudo /etc/init.d/apache2 reload</pre><h3>Remarque sur les DNS</h3>\n<p>Avoir créé tes sites, c'est bien joli, mais ça ne va te servir à rien si tu n'as pas de serveur DNS qui tourne et qui est bien configuré. Effectivement, les virtual hosts sont bien définis au niveau du serveur, mais <em>Internet</em> n'a aucune idée à quoi ça correspond.</p>\n<p>On peut donc faire deux choses:</p>\n<ul><li>Configurer un serveur DNS </li>\n<li>Ajouter l'info dans le fichier <strong>/etc/hosts</strong>, et ça peut même se rajouter au script :</li>\n</ul><pre>$ echo \"127.0.0.1 $SITENAME.$SITESERVER\" &gt;&gt; /etc/hosts<strong><br /></strong></pre><p>Où <strong>$SITENAME.SITESERVER</strong> correspondrait à quelque chose du genre de <strong>nomdusite.dev.monserveur.ch</strong>.</p>\n<p>L'adresse IP 127.0.0.1 doit être remplacée évidemment par l'adresse IP du serveur. L'exemple ici fonctionne en local.</p>\n<p>Comme déjà dit précédemment, ce script est en phase de test, n'hésite pas à cloner et à tester !</p>\n",
        "cat": "Linux, Web",
        "pub_date": "2012-09-04T19:42:02+02:00",
        "tags": "Drupal,mysql,bash,LAMP,script",
        "lang": "fr",
        "id": "95"
    },
    {
        "title": "Les nouveaux fonds d&#039;écran sont là pour Ubuntu 12.10 !",
        "slug": "/2012/09/les-nouveaux-fonds-décran-sont-là-pour-ubuntu-1210",
        "teaser": "Un concours avait été organisé pour décider des nouveaux fonds d'écran par défaut pour Ubuntu 12.10 (Quantal). Il s'est terminé mardi dernier, et 12 nouveaux fonds d'écran sont maintenant en ligne sur Launchpad.net.",
        "body": "<p>Pour les impatients, voilà le lien pour les télécharger : <a href=\"https://launchpad.net/ubuntu/quantal/+source/ubuntu-wallpapers/0.35.0\">https://launchpad.net/ubuntu/quantal/+source/ubuntu-wallpapers/0.35.0</a>. Visiblement il y a d'autres fonds d'écran plus anciens dans l'archive également.</p>\n<p>Pour les autres, les douze fonds d'écran séléctionnés !</p>\n<p><a class=\"colorbox colorbox-insert-image\" title=\"A little Quetzal by vgerasimov\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/A_Little_Quetzal_by_vgerasimov.jpg\"><img class=\"image-medium\" title=\"A little Quetzal by vgerasimov\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/A_Little_Quetzal_by_vgerasimov.jpg\" alt=\"A little Quetzal by vgerasimov\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Vanishing by James Wilson\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Vanishing_by_James_Wilson.jpg\"><img class=\"image-medium\" title=\"Vanishing by James Wilson\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Vanishing_by_James_Wilson.jpg\" alt=\"Vanishing by James Wilson\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Below Clouds by kobinho\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Below_Clouds_by_kobinho.jpg\"><img class=\"image-medium\" title=\"Below Clouds by kobinho\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Below_Clouds_by_kobinho.jpg\" alt=\"Below Clouds by kobinho\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Cairn by Sylvain naudin\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Cairn_by_Sylvain_Naudin.jpg\"><img class=\"image-medium\" title=\"Cairn by Sylvain naudin\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Cairn_by_Sylvain_Naudin.jpg\" alt=\"Cairn by Sylvain naudin\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"H by Manuel Sagredo\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/H_by_Manuel_Sagredo.jpg\"><img class=\"image-medium\" title=\"H by Manuel Sagredo\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/H_by_Manuel_Sagredo.jpg\" alt=\"H by Manuel Sagredo\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Blue Dandelion by Jaorizabal\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Blue_Dandelion_by_Jaorizabal.jpg\"><img class=\"image-medium\" title=\"Blue Dandelion by Jaorizabal\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Blue_Dandelion_by_Jaorizabal.jpg\" alt=\"Blue Dandelion by Jaorizabal\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Pantano de Orellana by mgarciaiz\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Pantano_de_Orellana_by_mgarciaiz.jpg\"><img class=\"image-medium\" title=\"Pantano de Orellana by mgarciaiz\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Pantano_de_Orellana_by_mgarciaiz.jpg\" alt=\"Pantano de Orellana by mgarciaiz\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Gran Canaria by ALF\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Gran_Canaria_by_ALF.jpg\"><img class=\"image-medium\" title=\"Gran Canaria by ALF\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Gran_Canaria_by_ALF.jpg\" alt=\"Gran Canaria by ALF\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Frozen by fernando garcila redondo\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Frozen_by_fernando_garcila_redondo.jpg\"><img class=\"image-medium\" title=\"Frozen by fernando garcila redondo\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Frozen_by_fernando_garcila_redondo.jpg\" alt=\"Frozen by fernando garcila redondo\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Roof tiles by Finn Sturdy\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Roof_Tiles_by_Finn_Sturdy.jpg\"><img class=\"image-medium\" title=\"Roof tiles by Finn Sturdy\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Roof_Tiles_by_Finn_Sturdy.jpg\" alt=\"Roof tiles by Finn Sturdy\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Early Morning by Robert Katzki\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Early_Morning_by_Robert_Katzki.jpg\"><img class=\"image-medium\" title=\"Early Morning by Robert Katzki\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Early_Morning_by_Robert_Katzki.jpg\" alt=\"Early Morning by Robert Katzki\" /></a><a class=\"colorbox colorbox-insert-image\" title=\"Green Plan by Simon Schlegl\" rel=\"gallery-all\" href=\"http://www.loutre.ch/sites/default/files/Green_Plant_by_Simon_Schlegl.jpg\"><img class=\"image-medium\" title=\"Green Plan by Simon Schlegl\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/Green_Plant_by_Simon_Schlegl.jpg\" alt=\"Green Plan by Simon Schlegl\" /></a></p>\n<p><em>Cliquez/tappez sur les images pour les afficher en grand !</em></p>\n<p>Ce n'est pas encore certain que tous ci-dessus vont pouvoir garder leur place privilégiée dans Quantal, car d'après OMG! Ubuntu! seulement 10 fonds avaient été demandés pour le concours.</p>\n<p>Pour ma part, mon favori est clairement le deuxième, mais <em>Blue Dandelion by Jaorizabal </em>(le bleu clair) est également assez suberbe. Mes icônes ne sont par contre pas compatibles à cause des couleurs...</p>\n<p>source: <a title=\"OMG! Ubuntu!\" href=\"http://www.omgubuntu.co.uk/2012/08/12-new-wallpapers-land-in-ubuntu-12-10\">omgubuntu.co.uk</a></p>\n",
        "cat": "Graphisme, Linux",
        "pub_date": "2012-09-01T22:04:27+02:00",
        "tags": "Ubuntu,Quantal,Fond d&#039;écran",
        "lang": "fr",
        "id": "94"
    },
    {
        "title": "Mémo Drupal : Une permission pour attribuer uniquement certains rôles aux utilisateurs",
        "slug": "/2012/08/mémo-drupal-une-permission-pour-attribuer-uniquement-certains-rôles-aux-utilisateurs",
        "teaser": "... avec Role Delegation. Super pratique, ce petit module.",
        "body": "<p>Cette fonctionnalité n'est pas directement accessible dans Drupal 7. Je dirai que pour un site simple, le ou les administrateurs gèrent les utilisateurs et leurs rôles, point. Dans notre cas, la personne qui gère les utilisateurs n'est pas l'administrateur du site. Elle ne s'occupe pas du building, et n'a donc pas besoin des droits d'admin. Le problème ici, c'est que si on donne à un gestionnaire d'utilisateur la permissions \"Administrer les droits\", elle aura non seulement l'accès au rôle \"Administrateur\" mais également à la table des permissions, ce qu'on veut éviter.</p>\n<p>L'utilisation est plus ou moins <em>straight-forward</em>.</p>\n<ol><li>Installe le module de manière traditionnelle. Il est disponible à cette adresse: <a href=\"http://drupal.org/project/role_delegation\">http://drupal.org/project/role_delegation</a></li>\n<li>Voilà.</li>\n</ol><p>Enfin, presque. Tu as maintenant une nouvelle catégorie dans la table des permissions qui se nomme \"Role delegation\" où tu as la possibilité d'attribuer des permissions d'<em>assignation </em>à un rôle.</p>\n",
        "cat": "Web",
        "pub_date": "2012-08-27T14:25:18+02:00",
        "tags": "Drupal",
        "lang": "fr",
        "id": "93"
    },
    {
        "title": "La partition synthé de Power of Love (Huey Lewis) - grâce à MidiSheetMusic",
        "slug": "/2012/08/la-partition-synthé-de-power-of-love-huey-lewis-grâce-à-midisheetmusic",
        "teaser": "Après avoir cherché en vain une bonne partition des synthés (Brass en fait) de la chanson de retour vers le futur de Huey Lewis (ces trucs qui font &quot;tui tuii&quot;) j&#39;ai décidé d&#39;en faire une moi-même, sans trop me compliquer la vie.",
        "body": "<p>Il y a un logiciel appelé MidiSheetMusic, disponible sur SF, qui transforme n'importe quel fichier midi en partition. Il permet également de lire cette partition, vraiment bien non ?</p>\n<p>J'ai donc pris le midi de la chanson et j'en ai fait une partition grâce à cet outil.</p>\n<p><img alt=\"Huey Lewis - Power of love Synth sheet - Page 1\" class=\"image-medium\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/PowerOfLove_BRASS1.png\" title=\"Huey Lewis - Power of love Synth sheet\" />  <img alt=\"Huey Lewis - Power of love Synth sheet - Page 2\" class=\"image-medium\" src=\"http://www.loutre.ch/sites/default/files/styles/medium/public/PowerOfLove_BRASS2.png\" title=\"Huey Lewis - Power of love Synth sheet\" /> </p>\n<p><em>Clique sur chaque page pour l'ouvrir en grand !</em></p>\n<p>Et pour le bonheur de tous...</p>\n<iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/-NMph943tsw\" frameborder=\"0\" allowfullscreen=\"\"></iframe>",
        "cat": "Logiciel libre, Musique",
        "pub_date": "2012-08-23T20:17:57+02:00",
        "tags": "Retour vers le futur,Huey Lewis,Power of Love,Partition",
        "lang": "fr",
        "id": "91"
    },
    {
        "title": "Nouveau design pour loutre.ch, et responsive, s&#039;il-vous-plaît !",
        "slug": "/2012/07/nouveau-design-pour-loutrech-et-responsive-sil-vous-plaît",
        "teaser": "Yes, enfin ! J&#39;ai enfin un peu de temps (la nouvelle série du Doctor Who est chronophage fois mille, j&#39;ai enfin terminé en attendant la nouvelle saison), et j&#39;ai pu mettre en place le nouveau thème &quot;Loutre2012&quot;.",
        "body": "<p>Ca reste très basique au niveau graphisme, j'ai toutefois mis un peu l'accent sur la typographie, en m'inspirant un peu par-ci par-là des sites à la mode.</p>\n<p>Au niveau fonctionnel, j'ai intégré Omega (un super thème responsive qui poutre), qui produit du HTML5. Assaisonné d'un peu de @font-face, de CSS3. C'est vraiment rigolo à utiliser, Omega. Le thème se base sur des grilles et c'est intéressant de ne plus pouvoir réfléchir en <strong>pixels</strong>, vu que le layout est fluide, mais en <strong>colonnes</strong>, 12 par défaut (comme ici). Cela rend le fichier CSS incroyablement propre.</p>\n<p>Du coup, Omega intègre une interface un peu rebutante, mais qui s'apprivoise relativement vite, qui nous permet en lieu et place d'un fichier <strong>page.tpl.php</strong> de placer des régions dans des zones, elles-mêmes placées dans des sections. On réfléchit alors de cette manière là: le contenu va dans les blocs, les blocs dans les régions, les régions dans les zones et les zones dans les sections. Bref, je te laisse lire la documentation.</p>\n<p>Le thème n'est pas fini, je vais inclure un peu de javascript quand j'aurai la motivation.</p>\n",
        "cat": "Web",
        "pub_date": "2012-07-25T21:57:26+02:00",
        "tags": "",
        "lang": "fr",
        "id": "90"
    },
    {
        "title": "Memo: Installer la nouvelle version 2.8 de Gimp sur Ubuntu 12.04",
        "slug": "/2012/05/memo-installer-la-nouvelle-version-28-de-gimp-sur-ubuntu-1204",
        "teaser": "Gimp 2.8 est sorti il y a pas longtemps, mais malheureusement Ubuntu 12.04 était déjà sortie et cette version n&#39;a pas pu être intégrée (2.7 à l&#39;époque, les nombres impaires étant réservés les versions en développement). Voici une méthode pour installer Gimp 2.8 dans sa dernière version sur Ubuntu.",
        "body": "<p>Quelqu'un a profité pour packager Gimp 2.8 et en faire une dépôt PPA pour Ubuntu, autant en profiter ! Ouvre un terrminal et tape :</p>\n<pre>\nsudo add-apt-repository ppa:otto-kesselgulasch/gimp\nsudo apt-get update\nsudo apt-get install gimp\n</pre><p>Les doigs dans le nez !</p>\n",
        "cat": "Graphisme, Linux",
        "pub_date": "2012-05-17T01:37:54+02:00",
        "tags": "Gimp,Ubuntu",
        "lang": "fr",
        "id": "87"
    },
    {
        "title": "SASS et vim",
        "slug": "/2012/04/sass-et-vim",
        "teaser": "SASS est un language compilable en CSS, permettant notamment, grâce à une syntaxe spéciale, d&#39;écrire du CSS d&#39;une manière un peu plus propre en utilisant par exemple des variables et des emboîtements de définitions. Ces fichiers .sass, une fois créés, doivent être traités (ou compilés) pour générer du CSS prêt à être lu par un navigateur. Le problème, c&#39;est que ces fichiers sass ne sont pas directement reconnus par vim et leur coloration syntaxique n&#39;est donc pas appliquée.Heureusement qu&#39;on peut créer nos propres fichiers de syntaxe pour vim, et... heureusement que quelqu&#39;un l&#39;a déjà fait.",
        "body": "<p>Première chose à faire, télécharger le fichier de syntaxe <strong>sass.vim</strong> à cette adresse :  <a href=\"https://github.com/tpope/vim-haml/blob/master/syntax/sass.vim\">https://github.com/tpope/vim-haml/blob/master/syntax/sass.vim</a></p>\n<p>Ce fichier contient une définition des règles à appliquer pour afficher un fichier .sass en couleurs. Maintenant, il s'agit de faire en sorte que ce fichier soit lu à chaque démarrage de vim pour des fichiers avec une extension <strong>.sass</strong>. On va appliquer ces règles à notre utilisateur uniquement.</p>\n<p>Créer un répertoire .vim, avec à l'intérieur, un répertoire syntax, s'il n'existe pas encore :</p>\n<pre>\nmkdir -p ~/.vim/syntax</pre><p>Y copier le fichier de syntaxe qu'on vient de télécharger</p>\n<pre>\ncp sass.vim ~/.vim/syntax/</pre><p>Et finalement, déclarer la nouvelle règle dans le fichier <strong>filetype.vim</strong>:</p>\n<pre>\nvim ~/.vim/filetype.vim</pre><p>Dedans, on y met :</p>\n<pre>\nau! BufRead,BufNewFile *.sass         setfiletype sass\nau! Syntax sass source ~/.vim/syntax/sass.vim\n</pre><p>La première ligne déclare le nouveau type de fichier avec l'extension. La seconde ligne donne le chemin d'accès du fichier de syntaxe pour ce nouveau type de fichier. Et voilà !</p>\n",
        "cat": "Linux, Web",
        "pub_date": "2012-04-14T14:38:51+02:00",
        "tags": "sass,CSS,vim,syntaxe",
        "lang": "fr",
        "id": "85"
    },
    {
        "title": "Bref, le flux RSS pas officiel qui fonctionne.",
        "slug": "/2012/03/bref-le-flux-rss-pas-officiel-qui-fonctionne",
        "teaser": "Petit message pour dire que j&#39;ai fait un flux RSS de la mini-série Bref (de Canal+) avec l&#39;outil Yahoo pipes. Bref (la série, donc), c&#39;est génial, le seul truc qui manque c&#39;est un flux RSS. C&#39;est chose faite !http://pipes.yahoo.com/pipes/pipe.run?_id=275ac12d107d83aa7a4f294c14598357&amp;_render=rss",
        "body": "<p>Basé sur la page d'accueil de la série, Pipes chope toutes les modifications du code source HTML. En parsant le code, je récupère avec quelques coups d'expressions régulières chaque nouvelle vidéo, et je construis le flux là dessus. J'y récupère uniquement le titre et, vu qu'elle est proposée, la miniature de la vidéo en tant que contenu.</p>\n<p>Le problème, c'est que s'ils changent le code HTML de leur site, ça marchera plus.</p>\n",
        "cat": "Films, Web",
        "pub_date": "2012-03-14T21:34:19+01:00",
        "tags": "Bref,RSS,flux,Pipes,Yahoo,regex,HTML",
        "lang": "fr",
        "id": "83"
    },
    {
        "title": "Astuce CSS : Ajouter des quotes à un texte",
        "slug": "/2011/10/astuce-css-ajouter-des-quotes-à-un-texte",
        "teaser": "Le concept est d&#39;avoir tous les titres de niveau 3 (h3) avec des quotes avant et après. Ces quotes peuvent être du texte (&quot;) ou des images. Ce petit tutorial explique comment activer ces quotes avec les pseudo-elements :before et :after",
        "body": "<p>Voici le résutat final qu'on aimerait obtenir. On remarquera que ça fonctionne aussi bien sur une que sur plusieurs lignes.</p>\n<p><img alt=\"h3 exemple avec quotes\" src=\"http://www.loutre.ch/sites/default/files/h3_example.png\" style=\"height:331px; width:363px\" title=\"Exemple H3\" /></p>\n<p>Première chose à faire, les images quotes avec un éditeur d'image (tel que GIMP). Ici, c'est simplement deux images avec fond transparent ou blanc de 7x7 px.</p>\n<p><img alt=\"Gimp screenshot\" class=\"image-fullwidth\" src=\"http://www.loutre.ch/sites/default/files/styles/fullwidth/public/carre7x7.png\" /></p>\n<p>Crée donc deux images <strong>quote_begin.gif</strong> et <strong>quote_end.gif </strong>que tu enregistres sur ton serveur, à un endroit qui est accessible avec une URL.</p>\n<p>Ensuite, le CSS. Les trois blocs qui suivent définissent le style du titre h3 ( h3 { } ), ce qui vient avant ( h3:before { } ) et ce qui vient après. ( h3:after { } ). Les margin, padding et autres seront bien sur à adapter en fonction du style, et de la taille de ton titre</p>\n<pre>\nh3 { \n  font-size: 1.08em;\n  font-weight: 500; \n  margin-bottom: 1em; \n  margin-top: 0.5em;\n}\nh3:before {\n  content: url(quote_begin.gif);\n  position:relative;\n  top: -10px;\n  width: 15px;\n  padding-right: 5px; \n}\nh3:after {\n  content: url(quote_end.gif);\n  position:relative;\n  bottom: -6px;\n  width: 15px;\n  padding-left: 5px; \n}\n</pre><p>Avec la règle content:url(quote_x.gif);, les images <strong>quote_begin.gif</strong> et <strong>quote_end.gif </strong>doivent être situés dans le même répertoire que la feuille de style. On peut ici adapter le chemin ou mettre un lien d'un serveur externe.</p>\n",
        "cat": "Graphisme, Web",
        "pub_date": "2011-10-04T11:48:45+02:00",
        "tags": "",
        "lang": "fr",
        "id": "79"
    },
    {
        "title": "Renommer en masse avec bash",
        "slug": "/2011/07/renommer-en-masse-avec-bash",
        "teaser": "Voici une astuce pour renommer en masse des fichiers avec bash directement. Le but est d&#39;obtenir, au lieu de artiste - album - numero - titre.mp3 quelque chose de plus simple comme numero - titre.mp3.",
        "body": "<p>Pour cela, nous allons utiliser une boucle <strong>for</strong> ainsi qu'une notation un peu spéciale de variable bash.</p>\n<pre>\nfor FILENAME in * ; do mv \"$FILENAME\" \"${FILENAME#artiste\\ -\\ album\\ -\\ }\"; done</pre><p>La notation ${VARIABLE#asupprimer} permet d'interpréter la variable en supprimant du contenu (ici : <strong>artiste - album -</strong> ).</p>\n<p>On renomme donc, pour chaque valeur de * (comme si je faisais un ls dans mon dossier courant), le fichier $FILENAME vers le fichier $FILENAME dont on a enlevé <strong>artiste - album - </strong>.</p>\n<p>En utilisant un double dièze <strong>##</strong>, on matche sur le plus long au lieu de faire sur le plus court quand on utilise un wildcard telle que l'étoile <strong>*</strong>.</p>\n<p>Par exemple : admettons que $FILENAME soit égal à <strong>Pornophonique - 8-Bit Lagerfeuer - 01 - Sad Robot.ogg.</strong></p>\n<p>${FILENAME#P*\\ -\\ } sera équivalent à<strong> 8-Bit Lagerfeuer - 01 - Sad Robot.ogg</strong></p>\n<p>tandis que</p>\n<p>${FILENAME##P*\\ -\\ } sera équivalent à <strong>Sad Robot.ogg</strong></p>\n<p><strong>Des questions ?</strong></p>\n<p>Source : <a href=\"http://linuxgazette.net/issue57/eyler.html\">http://linuxgazette.net/issue57/eyler.html</a><br />Ah et pis : <a href=\"http://www.jamendo.com/en/search/all/pornophonique\">http://www.jamendo.com/en/search/all/pornophonique</a></p>\n",
        "cat": "Linux",
        "pub_date": "2011-07-21T00:42:42+02:00",
        "tags": "bash,variables,catch,for",
        "lang": "fr",
        "id": "69"
    },
    {
        "title": "Drupal : Récupérer facilement les infos de la base de données avec bash ?",
        "slug": "/2011/06/drupal-récupérer-facilement-les-infos-de-la-base-de-données-avec-bash",
        "teaser": "Rien de plus facile. Enfin...\r\n\r\n\r\negrep -r &#39;^\\$db_url&#39; * | grep -v username | cut -d&#39;=&#39; -f2\r\n",
        "body": "<p>Regardons cette commande plus en détails :</p>\n<ul><li>Le egrep (en lieu et place de grep) va permettre de faire une recherche avec des expressions régulières (<strong>regexp</strong>) avancées sans avoir besoin d'échapper les caractères spéciaux.</li>\n<li>L'option -r fait en sorte de rechercher recursivement dans tous les fichiers (signalés par l'étoile) à partir du répertoire courant.</li>\n<li>L'expression ^\\$db_url signifie que je veux trouver toutes les lignes qui commencent par un $ (le signe ^ définit le début de ligne,le \\ permet d'échapper le $ qui veut dire fin de ligne en regexp) suivit d'un db_url</li>\n<li>L'étoile * va chercher dans tout les fichiers (wildcard)</li>\n</ul><p>Si on tape cette commande comme ça, après s'être placé dans le répertoire Drupal ( cd /var/www/drupal &amp;&amp; egrep -r '^\\$db_url' * ), on trouve un résultat de ce type :</p>\n<pre>\nwww/sites/default/default.settings.php:$db_url = 'mysql://username:password@localhost/databasename';\nwww/sites/default/settings.php:$db_url = 'mysqli://mysqldrupal:motdepasse@localhost/base_de_donnee_perso';</pre><p>C'est déjà pas mal. Par contre, on a les résultats du fichier <strong>default.settings.php</strong>, on n'en veut pas. Et l'indication \"www/sites/default/default.settings.php:$db_url\" est inutile également. On va donc allonger la commande et utiliser la barre verticale (<strong>pipe</strong> ou |) pour enchaîner les executables.</p>\n<p>Premièrement, on vire les résultats du fichiers <strong>default.settings.php</strong>. On utilise grep avec l'option -v qui permet d'inverser les résultats :</p>\n<pre>\negrep -r '^\\$db_url' * | grep -v databasename</pre><p>Ici, j'enlève toutes les lignes contenant \"databasename\". Il ne faut donc pas que ta base de donnée s'appelle databasename, en toute logique.</p>\n<p>Finalement, on veut enlever le nom du fichier pour plus de clarté. On utilisera cut qui permet de définir certaines colonnes (-d pour <strong>d</strong>elimitor) et de les afficher (-f pour <strong>field</strong>).</p>\n<pre>\negrep -r '^\\$db_url' * | grep -v databasename | cut -d'=' -f2</pre><p>On peut dès à présent définir un alias (à mettre dans le fichier <strong>.bash_aliases</strong> s'il existe ou dans le fichier <strong>.bashrc</strong>.</p>\n<pre>\nalias drupaldb=\"egrep -r '^\\\\\\$db_url' * | grep -v databasename | cut -d'=' -f2\"</pre><p>Remarquez le <strong>triple \\\\\\</strong>. Commençons à la fin : le dernier est utilisé pour échapper le $ pour éviter que la suite ne soit prise comme une variable bash, le second est utilisé en tant que caractère non interprété et le premier échappe le second pour éviter que le second soit interprété. Clair ?</p>\n<h4>Et maintenant, sans <strong>cut</strong> et avec en utilisant <strong>find</strong></h4>\n<p>Voici une autre méthode :</p>\n<pre>\nfind . -name settings.php -exec egrep -o [a-z_1-9]+:[a-z_1-9]+@[a-z_1-9]+/[a-z_1-9]+ {} \\; | grep -v databasename</pre><p>Si tu tapes ces commandes hors du répertoire Drupal, il va faire un grep sur les répertoires enfants, et ça risque de prendre du temps.</p>\n<p>Quelqu'un aurait une solution plus effective et sans <strong>pipe</strong> ?</p>\n",
        "cat": "Linux, Web",
        "pub_date": "2011-06-29T16:54:37+02:00",
        "tags": "Drupal,bash,find,grep,regex",
        "lang": "fr",
        "id": "65"
    },
    {
        "title": "Drupal 6 : Inserer une image avec un réglage imagecache dans un tpl.php",
        "slug": "/2011/05/drupal-6-inserer-une-image-avec-un-réglage-imagecache-dans-un-tplphp",
        "teaser": "Problématique : J&#39;ai un champ image et un champ URL. Je voudrais que lorsque je clique sur l&#39;image, l&#39;url renseignée dans l&#39;autre champ se charge. Et en même temps, j&#39;aimerais que l&#39;image affichée soit générée via imagecache. Fastoche !",
        "body": "<p>Première chose à faire, créer un fichier tpl.php en copiant node.tpl.php vers un autre fichier, par exemple :</p>\n<pre>\n$ cp node.tpl.php node-type_de_contenu.tpl.php</pre><p>Ensuite, on modifie node-type_de_contenu.tpl.php en ajoutant, juste après &lt;?php print $content ?&gt;, les champs qu'on veut.</p>\n<ul><li>$node-&gt;field_champurl[0]['display_url'] va afficher l'url renseignée dans champurl</li>\n<li>theme('imagecache', 'parametreimagecache', $field_champimage[0]['filepath']) va afficher l'image formatée avec le preset imagecache parametreimagecache.</li>\n</ul><p>Ça nous donne le résultat suivant :</p>\n<pre>\n&lt;?php print '\n    &lt;a href=\"' . $node-&gt;field_champurl[0]['display_url'] . '\"&gt;'. theme('imagecache', 'parametreimagecache', $field_champimage[0]['filepath']) . '&lt;/a&gt;\n'; ?&gt;</pre><p>On aurait la possibilité d'ajouter les attributs title, alt et autres, il suffit de fouiller en faisant un print_r($node); pour voir ce qui est disponible.</p>\n<p>Ne pas oublier de désactiver l'affichage des champs en questions dans <strong>Content management</strong> -&gt; <strong>Content types</strong> (surtout de l'image) pour éviter d'avoir du contenu dupliqué !</p>\n",
        "cat": "Web",
        "pub_date": "2011-05-26T14:25:38+02:00",
        "tags": "php,Drupal,templates,imagecache",
        "lang": "fr",
        "id": "62"
    },
    {
        "title": "Drupal 7 !",
        "slug": "/2011/01/drupal-7",
        "teaser": "Loutre.ch est maintenant sous Drupal 7. Quelques petits changements au niveau des vues, sinon tout est pareil. Il ne me reste qu&#39;à trouver un module de nuages de tags pour le pied de page.",
        "body": "",
        "cat": "Web",
        "pub_date": "2011-01-22T14:09:13+01:00",
        "tags": "Drupal 7",
        "lang": "fr",
        "id": "59"
    },
    {
        "title": "Bon anniversaire, Loutrepointcéache !",
        "slug": "/2011/01/bon-anniversaire-loutrepointcéache",
        "teaser": "Ça fait tout juste deux ans que le blog est ligne.",
        "body": "<p>Le premier post, sur Wordpress, illustrait une loutre qui baillait et depuis, une cinquantaine d'autres posts on été écrits là bas. Un peu de tout mais des fois aussi un peu de n'importe quoi, mais bon, c'est des choses qui arrivent.</p>\n<p>Puis, le 2 août 2010, la Loutre a rendu son passeport Wordpressien, s'est réfugiée dans les contrées Drupales (et a instauré le système des phrases débiles) et s'est débarrassée de son accoutrement quasi-standard qu'elle avait obtenu de l'industrie du Wordpress, et clairement changé son apparence pour quelque chose d'unique et de plus sobre.</p>\n<p>Et là, la Loutre est en train de migrer sur Drupal 7, un territoire qui lui rappelle quand même là ou elle habitait avant, mais quand même en beaucoup mieux. Elle a pourra garder ses habits mais elle en profite pour faire quelque changements, notamment pour profiter de Views 3.</p>\n",
        "cat": "",
        "pub_date": "2011-01-16T16:59:05+01:00",
        "tags": "loutre,Drupal,phrase débile",
        "lang": "fr",
        "id": "57"
    },
    {
        "title": "Drupal : J&#039;insère une vue dans un template (tpl.php) mais les scripts ne fonctionnent plus.",
        "slug": "/2011/01/drupal-jinsère-une-vue-dans-un-template-tplphp-mais-les-scripts-ne-fonctionnent-plus",
        "teaser": "Très embêtant lorsque la vue est un slideshow.",
        "body": "<p>Le code d'origine serait quelque chose du genre, situé par exemple dans un fichier <strong>page-node-popup.tpl.php</strong>:</p>\n<pre>\n&lt;?php\nprint views_embed_view('gallery_popup', 'default', arg(1));\n?&gt;</pre><p>Ceci affiche la vue <strong>gallery_popup</strong>, le display <strong>default</strong> avec comme argument le <strong>nid</strong> (<a href=\"http://url.com/node/24\">http://url.com/node/24</a> serait 24) pour afficher la galerie correspondant au noeud courant.</p>\n<p>Ceci fonctionne presque : on obtient des erreurs lors de la lecture des javascript (<strong>drupal_get_js()</strong>). Voici la solution proposée par le créateur de views himself :</p>\n<p>Rajouter ça dans le fichier <strong>template.php</strong> dans la fonction <strong>theme_preprocess_page</strong>:</p>\n<pre>\n$vars['view_gallery'] = views_embed_view('gallery_popup','default', arg(1));\n$vars['scripts'] = drupal_get_js();\nreturn $vars;\n</pre><p>Ce qui permettra d'utiliser la variable <strong>$view_gallery</strong> directement dans le<strong> </strong><strong>page-node-popup.tpl.php.</strong></p>\n<p>Source</p>\n",
        "cat": "Web",
        "pub_date": "2011-01-14T17:57:43+01:00",
        "tags": "Drupal,views,template",
        "lang": "fr",
        "id": "55"
    },
    {
        "title": "Personnaliser les dossiers par défaut sous Ubuntu",
        "slug": "/2010/12/personnaliser-les-dossiers-par-défaut-sous-ubuntu",
        "teaser": "T&#39;as envie d&#39;avoir de jolies icônes sur ton bureau GNOME (ou dans ton dossier personnel) mais tu es, comme moi, allergique aux majuscules par ce que ça prend juste trop de temps à taper dans un terminal ? Voilà la solution.",
        "body": "<p>Que le dossier personnel soit le bureau ou un dossier, cela n'a pas d'importance. Ce qu'on va voir maintenant, c'est comment paramétrer ces fameux dossiers qui sont créés par défaut lors de l'installation fraîche d'une distribution Ubuntu (ou autres) : <strong>Images</strong>, <strong>Documents</strong>, <strong>Modèles</strong>, <strong>Téléchargements</strong>, <strong>Vidéos</strong>.</p>\n<p>Personnellement, avoir un dossier \"Modèles\" juste avoir des modèles de documents prend juste trop de place dans mon dossier personnel. Je vais donc l'appeler \".modeles\" pour qu'il soit caché. Il sera toujours possible d'y mettre des fichiers, il suffira de faire CTRL+H pour afficher les fichiers et les dossiers cachés.</p>\n<p>Le dossier \"Vidéos\", je le renomme en \"multimedia\". Le dossier \"Téléchargements\" en \"téléchargements\", le dossier \"Documents\" en \"documents\" et le dossier \"Images\" en \"images. Alors comment faire ?</p>\n<p>On a un fichier de configuration personnel qui gère tout ça, c'est le fichier /home/monutilisateur/.config/user-dirs.dirs. On va donc l'éditer en lançant dans un terminal :</p>\n<pre>\ngedit ~/.config/user-dirs.dirs</pre><p>Le nouveau fichier ressemblera à ça, selon l'humeur :</p>\n<pre>\n# This file is written by xdg-user-dirs-update\n# If you want to change or add directories, just edit the line you're\n# interested in. All local changes will be retained on the next run\n# Format is XDG_xxx_DIR=\"$HOME/yyy\", where yyy is a shell-escaped\n# homedir-relative path, or XDG_xxx_DIR=\"/yyy\", where /yyy is an\n# absolute path. No other format is supported.\n# \nXDG_DESKTOP_DIR=\"$HOME/\"\nXDG_DOWNLOAD_DIR=\"$HOME/téléchargements\"\nXDG_TEMPLATES_DIR=\"$HOME/.modeles\"\nXDG_PUBLICSHARE_DIR=\"$HOME/\"\nXDG_DOCUMENTS_DIR=\"$HOME/documents\"\nXDG_MUSIC_DIR=\"$HOME/musique\"\nXDG_PICTURES_DIR=\"$HOME/images\"\nXDG_VIDEOS_DIR=\"$HOME/multimedia\"\n\n</pre><p>La variable $HOME représente ici <strong>/home/michael</strong> (où \"<strong>michael</strong>\" est mon nom d'utilisateur).</p>\n<p>Plus d'infos : <a href=\"http://doc.ubuntu-fr.org/tutoriel/personnaliser_gnome\">http://doc.ubuntu-fr.org/tutoriel/personnaliser_gnome</a></p>\n<p>En passant, pour définir le bureau en tant que dossier personnel (pour que les fichiers qui traînent ne traînent qu'à un seul endroit) : <strong>ALT</strong>+<strong>F2</strong>, entrer gconf-editor, ensuite navigue jusqu'à <strong>Apps</strong> -&gt; <strong>Nautilus</strong> -&gt; <strong>Preferences</strong> et active <strong>desktop_is_home_dir</strong>.</p>\n<p><strong>EDIT: </strong>On pourra également, pour ne pas avoir à renommer ses dossier, changer le comportement de bash pour qu'il prennent en compte les majuscules lors de l'autocomplétion :</p>\n<p>Ou plus proprement dans son .inputrc :<br />set completion-ignore-case on</p>\n<p>Plus d'infos également ici : <a href=\"http://blog-marcel.eu/index.php?article56/assouplir-la-casse-en-console\">http://blog-marcel.eu/index.php?article56/assouplir-la-casse-en-console</a></p>\n",
        "cat": "Linux",
        "pub_date": "2010-12-09T10:17:55+01:00",
        "tags": "Ubuntu,xdg,Gnome",
        "lang": "fr",
        "id": "51"
    },
    {
        "title": "WikiLeaks : parce que c&#039;est quand même important",
        "slug": "/2010/12/wikileaks-parce-que-cest-quand-même-important",
        "teaser": "Petit résumé de ce qu&#39;il se passe actuellement dans le monde.",
        "body": "<p>Wikileaks, existant depuis maintenant quelques années, commence à devenir <strong>très</strong> connu. Pourquoi ? Parce que l'organisation est en train de publier plus de 250'000 \"câbles\" (ou télégraphes) reprenant des conversations confidentielles entre 274 ambassades du monde depuis 1966 jusqu'à aujourd'hui. Plus de 15'000 sont qualifiés secrets. On y apprend plein de chose, mais là n'est pas le plus important. De toute façon, ça prendrait trop de temps à lire. (Hum)</p>\n<p>Le plus important, c'est le grand pas vers la liberté d'expression qui vient d'être franchi, et ça certaines personnes ne le supportent pas.</p>\n<p>Fait pas du tout surprenant : quelques jours après la publication de ses documents, Julian Assange, le porte-parole de WikiLeaks, est accusé non pas de viol, comme la plupart des médias l'ont relaté, mais de crime sexuel. D'après son avocat, il s'agirait de <em>surprise sex</em>, c'est à dire des relations sexuelles sans préservatif sans prévenir, qui est passible d'une amende salée (quelques centaines d'euros) en Suède. C'est tout. La Suède a quand même lancé un mandat d'arrêt à l'echelle européenne, c'est pour dire.</p>\n<p>Bref, c'est là que ça devient intéressant. WikiLeaks, et donc Julian, devient un phénomène mondial, haï par les gouvernements trop peu sûrs d'eux et des gens qui ont leur compte en banque rempli à ras bord d'argent dont \"on ne sait pas\" d'où il vient et qui croyent que c'est un violeur du style d'Ivan S., mais vénéré par ceux contre la corruption et les mensonges gouvernementaux. Et les jeunes rebelles. Finalement, Julian, munis de ses avocats, se livre à la police britannique le 7 décembre 2010 (ce matin). Entre temps, son compte Paypal, Visa, Postfinance, etc. ont été bloqués. D'ailleurs, Postfinance est vraisemblabement \"victime\" d'attaques DDOS. C'est à la mode en ce moment j'ai l'impression.</p>\n<p>En parallèle, Wikileaks.org devient instable. Tout d'abord, l'hébergeur du site stoppe son service. C'était Amazon.com. Le site est transféré sur un serveur français, chez OVH. Là tout à l'air de jouer, sauf que... le fournisseur du nom de domaine wikileaks.org stoppe son service lui aussi. Suite à cette annonce, le Parti Pirate suisse propose à WikiLeaks d'utiliser le domaine .ch qu'ils avaient acheté. L'URL est toujours accessible aujourd'hui, en tout cas en Suisse. Oui, car en France le site web a été filtré au Sénat... sauf que, entre temps, des centaines de miroirs voient le jour. Héhé.</p>\n<p>C'est qu'il est très simple d'installer un miroir du site sur son serveur, et (c'est un site statique qui prend à peu près 70 Mo pour l'instant). Il est mis à jour de manière automatique sans intervention de notre part. Le wikileaks loutré est situé à l'adresse wikileaks.loutre.ch.</p>\n<p>Vous voyez bien le problème : difficile de filtrer sur quelque chose qui existe partout.</p>\n<p>Autre histoire, celle d'un fichier d'environs 1.3 Go crypté qu'Assange à publié sur le net avec Bittorrent. Fichier qui est donc forcément déjà partout dans le monde sauf... qu'il est crypté (lien plus bas). Il dit qu'il donnera sa clé si son site se meurt, s'il est soumis à des charges soit à cause de Wikileaks, soit à cette histoire de <em>sex crimes</em>, ou s'il se fait assassiner (eh ben).</p>\n<p>Ce qui est sûr, c'est que Hollywood va s'y pencher... quoiqu'ils risquent encore de se faire censurer.</p>\n<p>Nous sommes bel et bien en train de vivre un moment historique palpitant.</p>\n<h3>Une petite liste de liens intéressants :</h3>\n<ul><li><strong>Le site officiel actuel :</strong><br /><a href=\"http://www.wikileaks.ch\">http://www.wikileaks.ch</a></li>\n<li><strong>La liste des mirroirs :</strong><br /><a href=\"http://wikileaks.loutre.ch/mirrors.html\">http://wikileaks.loutre.ch/mirrors.html</a></li>\n<li><strong>Un petit débat sur ces miroirs sur DLFP :</strong><br /><a href=\"http://linuxfr.org/~geb/30533.html\">http://linuxfr.org/~geb/30533.html</a></li>\n<li><strong>Tentative d'expulsion de Wikileaks de France :</strong><br /><a href=\"http://www.pcinpact.com/actu/news/60721-ovh-eric-besson-wikileaks-lcen.htm\">http://www.pcinpact.com/actu/news/60721-ovh-eric-besson-wikileaks-lcen.htm</a></li>\n<li><strong>Julian Assange arrêté :</strong><br /><a href=\"http://www.pcinpact.com/actu/news/60730-julian-assange-wikileaks-ddos-police.htm\">http://www.pcinpact.com/actu/news/60730-julian-assange-wikileaks-ddos-po...</a></li>\n<li><strong>Petit historique du site :</strong><br /><a href=\"http://www.francesoir.fr/medias-nouvelles-technologies/wikileaks-une-courte-vie-et-des-grands-coups-mediatiques\">http://www.francesoir.fr/medias-nouvelles-technologies/wikileaks-une-cou...</a></li>\n<li><strong>Le lien vers le fichier de 1.3 GO, que Julian nomme son \"insurance policy\" :</strong><br /><a href=\"http://thepiratebay.org/torrent/5723136/WikiLeaks_insurance\">http://thepiratebay.org/torrent/5723136/WikiLeaks_insurance</a></li>\n<li><strong>Un article concernant le fameux fichier :</strong><br /><a href=\"http://news.yahoo.com/s/atlantic/20101206/cm_atlantic/wikileaksheadwillreleasehugefileifarrested6052_1\">http://news.yahoo.com/s/atlantic/20101206/cm_atlantic/wikileaksheadwillr...</a></li>\n<li><strong>Qui sera la personnalité de l'année 2010 ? Julian Assange en tête :</strong><br /><a href=\"http://www.time.com/time/specials/packages/article/0,28804,2028734_2029036_2029037,00.html\">http://www.time.com/time/specials/packages/article/0,28804,2028734_20290...</a></li>\n<li><strong>Plus d'un million de fans sur facebook :</strong><br /><a href=\"http://www.facebook.com/wikileaks\">http://www.facebook.com/wikileaks</a></li>\n</ul>",
        "cat": "Logiciel libre, Web",
        "pub_date": "2010-12-07T23:17:48+01:00",
        "tags": "WikiLeaks,Assanges,liberté d&#039;expression",
        "lang": "fr",
        "id": "49"
    },
    {
        "title": "De la neige, il y a.",
        "slug": "/2010/12/de-la-neige-il-y-a",
        "teaser": "Bussigny, 01.12.2010",
        "body": "",
        "cat": "Photographie",
        "pub_date": "2010-12-01T23:38:42+01:00",
        "tags": "Neige",
        "lang": "fr",
        "id": "50"
    },
    {
        "title": "Pathauto sort en version 1.5",
        "slug": "/2010/10/pathauto-sort-en-version-15",
        "teaser": "Pathauto vient de sortir en version 1.5 pour Drupal 6, ce qui corrige entre autres la gestion du jeton [menupath] qui avait été cassée lors de la mise à jour en version 1.4.",
        "body": "<p>Pathauto est un module qui sert à créer des URLs sémantiquement correctes de manière automatique et fonctionnant avec des <strong>tokens</strong> (jetons). Ces tokens peuvent par exemple correspondre à un endroit dans un menu [menupath], à un numéro de noeud <em>[node]</em>, à une date <em>[yyyy]</em>-<em>[mm]</em>-<em>[dd]</em>, etc.</p>\n<p>Cela permet de construire des URLS de type <a href=\"http://example.com/blog/2008/mon-post.html\">http://example.com/blog/2008/mon-post.html</a> de manière totalement automatisée.</p>\n<ul><li>Téléchargement direct du module version 6.x-1.5 (format tar.gz)</li>\n<li>Page du projet Pathauto </li>\n</ul><p> </p>\n",
        "cat": "Web",
        "pub_date": "2010-10-08T16:15:13+02:00",
        "tags": "Drupal,Pathauto,token,url",
        "lang": "fr",
        "id": "44"
    },
    {
        "title": "Drupal 7 disponible en beta",
        "slug": "/2010/10/drupal-7-disponible-en-beta",
        "teaser": "Drupal, le CMS qu&#39;on ne présente plus, vient de sortir une version Beta de sa version 7. Et ça promet !",
        "body": "<p>Vous savez ce que ça veut dire ?</p>\n<ul><li>La migration entre Drupal 6 et 7 est dorénavant possible. En gros ils ont réussi à migrer la base de donnée de Drupal.org vers un Drupal 7.</li>\n<li>Les bugs critiques de sécurité sont corrigés</li>\n<li>Les APIs sont (assez) prêtes pour que les contributeurs peuvent commencer à développer leurs modules</li>\n</ul><p>La communauté Drupal encourage évidemment à tout le monde, débutant comme ninja du code (comme ils disent) de participer au test de cette version, en n'oubliant pas que c'est une version en développement qu'il faut éviter d'utiliser en environnement de production.</p>\n<h3>Les nouveautés de Drupal 7, pour les nuls</h3>\n<p>En extrêmement simplifié, voici quelques unes des tonnes de nouveautés de Drupal 7 par rapport à Drupal 6 :</p>\n<ul><li>Nouveaux thèmes par défaut dont un thème de basique pour le développement de sous-thèmes (Seven)</li>\n<li>Nouvelle interface d'administration avec simplification des choses et un énorme boulot dans l’utilisabilité</li>\n<li>Deux modes d'installation (normal et minimal)</li>\n<li>La possibilité de mettre à jour les modules directement depuis le navigateur</li>\n<li>Les champs CCK directement dans core (donc sans avoir besoin de télécharger des modules complétementaire)</li>\n<li>Pareil pour la gestion des images : on ne s'emmerde plus avec les 40 modules dont on ne sait pas lequel choisir.</li>\n</ul><p>Pour ma part, je suis en train de séparer le multisite Drupal que j'avais fait (une seule instance Drupal avec plusieurs sites) en plusieurs instances Drupal, une par site. Ce qui m'a tout d'abord semblé plus facile au niveau de la maintenance s'est avéré plus compliqué que prévu, notamment pour la gestion des modules, étant donné que mes sites avaient des besoins différents.</p>\n<p>Ça va me permettre de migrer sans (trop de) (j'espère) problèmes ce blog sous Drupal 7, histoire d'apprendre les nouveaux concepts.</p>\n<p>Pour télécharger cette première Beta, c'est par là !</p>\n<p>Source</p>\n",
        "cat": "Logiciel libre, Web",
        "pub_date": "2010-10-07T12:13:27+02:00",
        "tags": "Drupal,Drupal 7,CMS",
        "lang": "fr",
        "id": "42"
    },
    {
        "title": "Sintel est disponible au téléchargement !",
        "slug": "/2010/09/sintel-est-disponible-au-telechargement",
        "teaser": "Juste une courte note à propos du projet Durian, le court-métrage libre créé par l&#39;Institut Blender.",
        "body": "<p>Après l'annonce que j'ai faite hier soir, Sintel est maintenant en ligne ! Il est disponible au téléchargement bittorrent ici dans tous les formats (MP4 surround, MP4 stereo et OGV stereo) et il est également possible de précommander les DVDs. En attendant la fin des téléchargements, voilà la vidéo Youtube !</p>\n<p> </p>\n",
        "cat": "Films, Logiciel libre",
        "pub_date": "2010-09-30T20:36:01+02:00",
        "tags": "3D,Blender,Sintel,Projet Durian",
        "lang": "fr",
        "id": "41"
    },
    {
        "title": "Le court métrage Sintel de l&#039;Institut Blender sera bientôt en ligne !",
        "slug": "/2010/09/le-court-metrage-sintel-de-linstitut-blender-sera-bientot-en-ligne",
        "teaser": "Sintel, également connu sous le nom de Projet Durian (ou Durian Open Movie Project), est un court métrage créé par l&#39;Institut Blender, déjà connu pour ses précédents films Elephant Dream (2005) et Big Buck Bunny (2008). La première de Sintel a eu lieu il y a deux jours lors du Netherlands Film Festival, et le visualisation en ligne sera disponible normalement dès demain, 30 septembre.",
        "body": "<p> </p>\n<p><img alt=\"\" class=\"imagecache-contenu_384\" src=\"http://www.loutre.ch/sites/loutre.ch/files/imagecache/contenu_384/images/sintel_poster_1.jpg\" style=\"float:left; margin-right:30px\" />Commencé en mai 2009, le film avait pour concepts :</p>\n<ul><li>d'être un film d'animation court de 5 à 8 minutes</li>\n<li>une histoire courte mais avec un impact émotionnel marqué et des scènes d'actions</li>\n<li>pour les adolescents (bon, là les créateurs se vantent eux même d'en faire partie)</li>\n<li>... et donc d'avoir une fille comme personnage principal.</li>\n<li>une apparence visuelle et conceptuelle à la sauce Hollywood. (source)</li>\n</ul><p>Les films de l'Institut Blender visent principalement à promouvoir le fabuleux logiciel d'édition 3D libre du même nom mais c'est devenu beaucoup plus : chaque nouvelle création de l'institut devient un évènement très attendu par plus en plus de monde, et pas seulement de la communauté libre.</p>\n<p>Voici le trailer du film :</p>\n<p> </p>\n<p>Un grand merci à toute l'équipe de Blender qui, je suis sûr, nous surprendra encore avec ce nouvel opus !</p>\n",
        "cat": "Films, Logiciel libre",
        "pub_date": "2010-09-29T23:45:08+02:00",
        "tags": "3D,Blender,Sintel,Projet Durian,film,court-métrage",
        "lang": "fr",
        "id": "40"
    },
    {
        "title": "Tester diaspora",
        "slug": "/tester-diaspora",
        "teaser": "Après l&#39;annonce de l&#39;ouverture du code de Diaspora, les premiers serveurs commencent à pointer le bout de leur nez (si les serveurs avaient un nez).",
        "body": "<p>On a par exemple Openspora, qui nous permet de tester les fonctionnalités de Diaspora d'une manière plus concrète qu'avec les captures d'écran.</p>\n<p>Je rappelle que Diaspora est un outil en plein développement : c'est tout à fait normal que tout ne fonctionne pas comme il faut. Mais grâce à des sites comme Openspora, on comprend mieux comment fonctionne la décentralisation du logiciel.</p>\n<p>Edit : Openspora est mort :/</p>\n",
        "cat": "Logiciel libre, Web",
        "pub_date": "2010-09-21T14:03:42+02:00",
        "tags": "Diaspora,décentralisation,openspora",
        "lang": "fr",
        "id": "39"
    },
    {
        "title": "Le code source de Diaspora est maintenant ouvert !",
        "slug": "/le-code-source-de-diaspora-est-maintenant-ouvert",
        "teaser": "Diaspora, le projet qui se veut une alternative libre à Facebook, vient de publier le code source du projet. Le développement de l&#39;application en question est dorénavant ouvert à tous. Un peu plus sur Diaspora, et sur Movim, l&#39;alternative francophone.",
        "body": "<p>Enfin, des nouvelles du projet ! On avait déjà entendu parler de movim, le projet de plateforme social européen, eh ben maintenant il y a Diaspora, à la sauce américaine. Qui dit américain, dit également... argent. Eh ouais, les quatre étudiants qui ont fait Diaspora ont reçu plus de 200'000 dollars de dons. Même Zucki s'y est mis, en mentionnant que le projet est une \"idée cool\". J'y vois donc un peu plus d'avenir que chez Movim, où la démo est toujours attendue. Mais ne soyons pas pessimistes, et les deux projets n'ont peut-être pas les mêmes ambitions.</p>\n<h3>Diaspora, j'vais l'installer chez moi.</h3>\n<p>Contrairement à Facebook, Diaspora et Movim fonctionnent d'une manière totalement décentralisée. Qu'est-ce que ça veut dire ?  Un système centralisé comme Facebook ne fonctionne qu'avec un serveur (comprendre : des milliers de serveurs mais apprenant tous à une seule entreprise). Les gens qui se connectent interagissent donc directement chez Facebook et ils n'y contrôlent rien. En y laissant quelques petits souvenirs : des données personnelles par exemple.</p>\n<p>Diaspora a, mine de rien, été lancé au bon moment.</p>\n<p>Diaspora et Movim ont pour but de décentraliser cette gestion. Il sera donc possible, en théorie, d'interconnecter tous les serveurs configurés et donc d'installer un système chez soi (geek), sans craindre un vol de données privées. On imagine également un système hébergé (gens) par un fournisseur externe ou interne à Diaspora.</p>\n<p>On peut voir la chose comme Drupal Gardens : un service fourni par Drupal qui utilise un CMS qui s'installe aussi sur notre propre serveur. Sauf qu'en plus, tout ce petit monde se parle et interagit.</p>\n<h3>Diaspora...</h3>\n<p><img alt=\"\" src=\"http://www.loutre.ch/sites/loutre.ch/files/images/diasporalogo_0.png\" style=\"height:48px; width:215px\" /></p>\n<p>Contrairement à Movim qui suit un peu le chemin du logiciel libre typique, si j'ose dire, Diaspora a été développé en interne par l'équipe des quatre fameux développeurs dans un premier temps. Cela a permis d'établir une structure solide et de tracer un chemin d'avancement précis. Et donc au projet de se développer... Les dons ayant bien aidé évidemment.</p>\n<p> </p>\n<p>La communauté peut donc partir donc sur cette base concrète afin de contribuer comme il se doit.</p>\n<h3>...et Movim ?</h3>\n<p><img alt=\"\" src=\"http://www.loutre.ch/sites/loutre.ch/files/images/movim_0.png\" style=\"height:74px; width:302px\" /></p>\n<p>Movim, pour sa part, n'est pour l'instant guère avancé. Il est pourtant prometteur : il base son architecture autour de trois points : <strong>Core</strong>, <strong>Social</strong> et <strong>Group</strong>.</p>\n<p>MOVIM Core, c'est la base. Tout les modules auront besoin de lui, et il ne fait rien tout seul si ce n'est l'administration. MOVIM Social regroupe tout ce qui concerne la communication : gestion des contacts, messagerie, etc. Movim Group va permettre aux utilisateurs de joindre... des groupes.</p>\n<p>On imagine également une sorte de centre d'applications où on pourra y installer autant de choses que l'ont veut.</p>\n<p>Espérons que ces projets voient le jour une fois et que le grand public soit conquis !</p>\n",
        "cat": "Logiciel libre, Web",
        "pub_date": "2010-09-16T21:27:15+02:00",
        "tags": "Facebook,Diaspora,Movim,réseau social,décentralisation",
        "lang": "fr",
        "id": "38"
    },
    {
        "title": "Harmony, un outil de dessin javascript Chrome Experiments",
        "slug": "/harmony-un-outil-de-dessin-javascript-chrome-experiments",
        "teaser": "Harmony est un outil de dessin très intéressant fait avec du HTML5 (balise&nbsp;Canvas) et du javascript. On y passe vite du temps : les brosses dynamiques intégrées font d&#39;un simple trait plus ou moins tracé rapidement une oeuvre abstraite tout droit sortie de l&#39;imagination du dessinateur.",
        "body": "<p>Harmony est listé dans sur le site \"Chrome experiments\" qui recense diverses applications web en HTML5 et javascript entre autres.</p>\n<p><img alt=\"\" class=\"image-large\" src=\"/sites/default/files/styles/large/public/Wilderness-Years_0001.jpg?itok=33esZJbI\" style=\"height:294px; width:480px\" /></p>\n<p>On a par exemple The Wilderness Downtown, un mini-site d'<strong>Arcade Fire</strong> développé en collaboration avec Google pour leur album <strong>We used to Wait</strong>. Ce dernier utilise Google Maps et Google Street View, en les intégrant à l'animation.</p>\n<p> </p>\n",
        "cat": "Web",
        "pub_date": "2010-08-31T20:59:50+02:00",
        "tags": "javascript,dessin,HTML5,chrome,Arcade Fire",
        "lang": "fr",
        "id": "36"
    },
    {
        "title": "Ça y est, Loutre.ch tourne avec Drupal !",
        "slug": "/ca-y-est-loutrech-tourne-avec-drupal",
        "teaser": "On est bon, c&#39;est migré !",
        "body": "<p>Le site est <em>partiellement</em> migré sous Drupal. Le contenu le plus regardé en tout cas. Le reste, c'était pas forcément intéressant. On remarquera l'apparition d'un onglet de menu dédié pour mon voyage en Islande 2009. Oui, il faut que je termine la redaction... Je n'ai pas migré les commentaires par contre. C'est pas comme si j'en avait 2'120'949 aussi.</p>\n<p>Au niveau des nouveautés, le design <em>of course</em>. J'ai essayé de faire quelque chose de simple et sobre avec quand même une certaine identité visuelle. J'ai enfin \"officialisé\" le logo (la loutre avec le casque), quelque chose que j'avais fait il y a quelque temps déjà. Quand le site était encore la documentation officielle de shound.org tournant sur Zope/Plone. Ouaip. Le thème n'est pas testé sur IE. Pourquoi ? Parce que je m'en fous. C'est un design à une colonne, je suis persuadé que même IE5.5 arrivera à afficher quelque chose.</p>\n<p>J'y ai implémenté des polices @font-face avec CSS. Il s'agit de Reenie Beanie, une police d'écriture de chez Google. Là je <em>sais</em> que ça ne va pas s'afficher correctement avec IE.</p>\n<p>Sinon une meilleure gestion de la SEO : les mots-clés sont repris des tags et des catégories, et la description directement du teaser.</p>\n<p>Mais le principal, c'est juste le contrôle du système qui m'est plus familier avec Drupal qu'avec Wordpress (ce dernier n'étant pour moi qu'un CMS de blog avec quelques modules rigolos) (pour moi hein, je suis sûr qu'il est capable de bien plus). Je vais donc pouvoir faire ce que je veux avec le bousin, et c'était là le but de toute l'opération.</p>\n<p>Qu'est-ce que vous en pensez ?</p>\n",
        "cat": "Web",
        "pub_date": "2010-08-02T00:58:29+02:00",
        "tags": "CSS,loutre,font-face,wordpress,migration,islande",
        "lang": "fr",
        "id": "29"
    },
    {
        "title": "Ajouter un equaliseur sous Ubuntu Lucid",
        "slug": "/ajouter-un-equaliseur-sous-ubuntu-lucid",
        "teaser": "Ça fait longtemps que je cherchais un equaliseur afin de diminuer les basses (beaucoup) trop présentes sur mon kit 2.1. Je l&rsquo;ai enfin trouvé : il s&rsquo;agit de PulseAudio Equalizer.",
        "body": "<p>Pour l’installer sur Ubuntu, rien de plus simple. Ouvre un terminal et :</p>\n<pre>\n$ sudo aptitude install pulseaudio-equalizer\n</pre><p>L’equaliseur graphique se situe dans <strong>Son et Vidéo – PulseAudio Equalizer </strong>.</p>\n<p>Sans aucune configuration, le son a déjà une meilleure clarté. Il nous donne ensuite la possibilité de choisir parmi différentes préselections « Presets » et de créer d’enregistrer nos profils personnels.</p>\n<p>Comme son nom l’indique, PulseAudio Equalizer ne fonctionne qu’avec... Pulse Audio, système utilisé (entre autres) par Gnome. Ça ne fonctionnera donc pas sous KDE.</p>\n",
        "cat": "Linux",
        "pub_date": "2010-08-01T23:03:15+02:00",
        "tags": "Ubuntu,equaliseur,son",
        "lang": "fr",
        "id": "27"
    },
    {
        "title": "LeMonde.fr interviewe Dries Buytaert ",
        "slug": "/lemondefr-interviewe-dries-buytaert",
        "teaser": "Le journal LeMonde.fr a interviewé Dries Buytaert sur l&#39;avenir de Drupal et du logiciel libre, et aussi, en passant, de ce qu&#39;il pensait du fameux FAIL de France.fr (site qui tourne tournait sous Drupal).",
        "body": "<p> </p>\n<p>\"Je crois que la première bataille est finie, et c'est le logiciel libre qui a gagné. Il y a cinq ou dix ans, il fallait faire preuve de pédagogie pour expliquer ce qu'est un logiciel libre et son intérêt. Cette époque est révolue : aujourd'hui, les utilisateurs sont convaincus, ils sont à l'aise avec l'idée des licences ouvertes. Il reste bien sûr des choses à faire, mais sur ce volet, le plus dur est derrière nous.\" Dries Buytaert</p>\n<p><a href=\"http://www.lemonde.fr/technologies/article/2010/07/27/plus-d-un-pour-cent-des-sites-utilisent-drupal_1392758_651865.html\">http://www.lemonde.fr/technologies/article/2010/07/27/plus-d-un-pour-cen...</a></p>\n",
        "cat": "Logiciel libre, Web",
        "pub_date": "2010-07-28T11:30:25+02:00",
        "tags": "Drupal,Dries Buytaert",
        "lang": "fr",
        "id": "19"
    },
    {
        "title": "Type folly - Une appli CSS3 intéressante.",
        "slug": "/type-folly-une-appli-css3-interessante",
        "teaser": "Incroyabe les choses qu&#39;on arrive à faire avec du CSS et un peu de javascript.",
        "body": "<p>Cette application permet démontrer les capacités des technologies web actuelles. Il est possible de personnaliser une page avec un layout dans le style de photoshop, le tout fonctionnant avec des polices d'écritures qu'on peut utiliser avec @font-face de CSS3 (comprendre : avec la licence qui va bien).</p>\n<p><img alt=\"\" class=\"imagecache-contenu_384\" src=\"http://beta.loutre.ch/sites/beta.loutre.ch/files/imagecache/contenu_384/images/typefolly.png\" /></p>\n<p>Il est possible donc de changer la police des éléments, de les déplacer, de changer leur opacité, etc. Chose intéressante, mêmes les logos du footer sont typographique et sans images !</p>\n<p>Il faut vraiment essayer pour s'en apercevoir.</p>\n",
        "cat": "Web",
        "pub_date": "2010-07-17T02:18:41+02:00",
        "tags": "CSS3,javascript",
        "lang": "fr",
        "id": "17"
    },
    {
        "title": "Linux : Script simple pour backup de bases de données MySQL",
        "slug": "/linux-script-simple-pour-backup-de-bases-de-donnees-mysql",
        "teaser": "J&rsquo;ai écrit un petit script simple pour faire un backup complet de toutes les bases de données MySQL qui sont sur le système.",
        "body": "<p>Il suffit de créer un fichier avec le code suivant en modifiant « utilisateur » et « motdepasse » en fonction de ton système (l’utilisateur ici doit avoir un accès aux bases de données).</p>\n<p>Ensuite, tu rends le code exécutable (chmod +x lescript), puis tu l’execute en root (ou en utilisateur normal si t’as les droits sur le répertoire défini ci-dessous).</p>\n<pre>\n#! /bin/sh\nDATE=`date '+%Y.%m.%d'` # définition de la date\nFOLDER=/home/backups # définition du répertoire où sauvegarder\nMYSQLUSER=utilisateur # utilisateur msyql ...\nMYSQLPASSWD=motdepasse # ... et son mot de passe\nDATABASES=`mysql -u $MYSQLUSER -p$MYSQLPASSWD -e 'SHOW DATABASES' | sed '1,2d'` # définition de la liste des bases\n\n[ -d $FOLDER ] || mkdir $FOLDER # On commence par créer le répertoire défini plus haut s'il n'existe pas.\n\nfor i in $DATABASES; do\necho \"Dumping $i... database\" in $FOLDER ;\nmysqldump -u $MYSQLUSER -p$MYSQLPASSWD $i &gt; $FOLDER/$i.$DATE.sql ; # voici le dumping MySQL dans une boucle for\ndone\necho \"`echo $DATABASES | wc -w` Databases were backed up in $FOLDER\"</pre><p>Note à propos de la définition de la variable DATABASES : le sed à la fin permet de supprimer les deux premières lignes, ici ﻿Databases et information_schema qu’on ne va pas utiliser. Pour mieux comprendre, exécute la commande</p>\n<pre>\n$ mysql -u user -p -e 'SHOW DATABASES'</pre><p>ou</p>\n<pre>\n$ mysql -u user -p -e 'SHOW DATABASES' | cat</pre><p>(pour un format traité par bash)</p>\n<p>Il est tout à fait possible de faire en sorte qu’il s’exécute automatiquement, il suffit de placer ce script dans le bon répertoire Cron : /etc/cron.hourly/, /etc/cron.daily/, /etc/cron.weekly/, /etc/cron.monthly/</p>\n<p>Attention : un script situé dans un répertoire cron ne peut pas contenir de caractères spéciaux (espace, underscore). Une fois le script en place, on peut tester les repertoires et voir ce qui va s'exécuter lors du cron en tappant :</p>\n<pre>\n$ run-parts --test /etc/cron.&lt;dossier&gt;\n</pre>",
        "cat": "Linux",
        "pub_date": "2010-07-11T14:03:15+02:00",
        "tags": "script,bash,mysql,backup",
        "lang": "fr",
        "id": "14"
    },
    {
        "title": "Ajoutez votre phrase débile !",
        "slug": "/ajoutez-votre-phrase-debile",
        "teaser": "",
        "body": "<p>C'est tout nouveau, il est dorénavant possible d'ajouter une phrase débile que dirait la loutre sur cette page!</p>\n<!--break-->\n<p>A bientôt pour de nouvelles aventures.</p>\n",
        "cat": "",
        "pub_date": "2010-07-10T02:16:16+02:00",
        "tags": "",
        "lang": "fr",
        "id": "7"
    },
    {
        "title": "Et maintenant, au tour du CSS de se trouver une place dans le XHTML !",
        "slug": "/et-maintenant-au-tour-du-css-de-se-trouver-une-place-dans-le-xhtml",
        "teaser": "",
        "body": "<p>On a vu comment créer une page en XHTML, voici maintenant les bases du CSS (Cascading style sheets ou Feuilles de Style en Cascade). Les feuilles de styles sont dorénavant un must dans le domaine du webdesign. Plus question, comme autrefois, d’éditer son fichier HTML pour y mettre des couleurs de police, des bordures doublement grasses ou des tableaux fluorescents !</p>\n<!--break-->\n<p>Imagine le CSS comme un truc à part, pas dans le code, c’est beaucoup plus simple à comprendre. La partie XHTML est la structure et la partie CSS c’est le design et la mise en page (et le PHP, c’est le « moteur » en quelque sorte, mais ça, c’est pas pour maintenant).</p>\n<p>Dans le CSS, on va y mettre, entre autres, les informations suivantes :</p>\n<ul><li>La largeur de la page (possibilité de créer une page de largeur fixe ou dynamique, selon les goûts)</li>\n<li>La couleur de fond de la page et/ou du texte</li>\n<li>La police d’écriture</li>\n<li>Les bordures</li>\n<li>La couleur du texte, des titres, et de toutes les autres sortes de texte.</li>\n</ul><p>Avoir une feuille séparée a toute son utilité : il suffira par exemple de modifier la feuille de style pour que ça s’applique à toute la page ou site. Le contenu n’en sera pas du tout affecté, et c’est là toute la puissance de ce système.</p>\n<p>Maintenant que tu sais à quoi ça sert, mettons les mains dans le cambouis.</p>\n<p>Voici une partie de la section <strong>head</strong> d’une page d’accueil, la plus simple qui existe.</p>\n<pre>\n&lt;head&gt;\n    &lt;title&gt;Index - monsitesurlinux.org&lt;/title&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" /&gt;\n    &lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n&lt;/head&gt;\n</pre><p>Voici donc comment on intègre une feuille de style CSS externe dans le XHTML.</p>\n<p>Le CSS est placé sur la troisième ligne dans le tag <strong>link.</strong> On y met l’option href, qui définit l’URL de la feuille de style et les options rel et type qui contiennent toujours respectivement stylesheet et text/css (dans le cas du CSS).</p>\n<p>Nous allons maintenant appliquer un style sur une page XHTML (regardez dans le dernier article pour une page XHTML simple).</p>\n<p>Premièrement, ajoute le tag &lt;link .../&gt; complet ci-dessus dans ta page XHTML. Ensuite, crée un nouveau fichier<strong> style.css</strong>, toujours avec un gedit, bloc-note, vim, notepad++, tant que ça tape du texte brut. Notepad ++, est, en passant, une bonne solution sous Windows. Il permet l’affichage des couleurs pour s’y retrouver dans son code et d’autres trucs pratiques. Personnellement j’utilise vim quand je modifie mes fichiers web sur le serveur (Debian), et Geany en local (sous Ubuntu).</p>\n<h3>Importation d’autres feuilles de styles</h3>\n<p>Bref, un fichier CSS peut être très court, ou alors vraiment très très très très long. Ça ne s’appelle pas Cascading Style Sheets pour rien, on peut imbriquer des feuilles de style ensemble pour que ça soit moins bordelique. On pourrait ainsi mettre tout ce qui concerne les couleurs dans couleurs.css, tout ce qui concerne le layout de la page dans layout.css, ce qui concerne des modules spéciaux auraient leur propre feuille de style, etc.</p>\n<p>Pour importer une autre feuille de style, on metterait le code suivant, dans notre cas, dans <strong>style.css</strong> :</p>\n<pre>\n@import url(couleurs.css);\n@import url(layout.css);</pre><p>On créerait ainsi les fichiers<strong> couleurs.css</strong> et <strong>layout.css</strong> dans le même dossier que <strong>style.css</strong>.</p>\n<h3>Organisation du CSS</h3>\n<p>Il y a trois éléments dans une feuille de style. Premièrement, les balises, reprises du code XHTML. Ensuite, les propriétés, c’est-à-dire ce que l’on veut modifier. Finalement, la valeur de la propriété (de la balise). Plus clairement, voici la mise en forme :</p>\n<pre>\nbalise {\n   propriété: valeur;\n   propriété2: valeur\n}\n/* Commentaire */</pre><p>On peut mettre plusieurs propriétés dans une balise, on peut même imbriquer les balises de vingt milles différentes manières (enfin pas autant, mais c’est pour faire genre), les possibilités en CSS sont grandes.</p>\n<p>Les commentaires se mettent entre /* et*/.</p>\n<p>Il ne faut surtout pas oublier le ; entre les propriétés, et les { et } pour délimiter les balises.<br />Pour faire en sorte que tous les liens (balise … &lt;a&gt; dans le code XHTML) soient gras, rouges, et non-soulignés, on ferait de quelle manière alors ?</p>\n<h3>Quelques propriétés en vrac</h3>\n<p>Facile :</p>\n<pre>\na { /*tous les liens*/\n   font-weight: bold; /*en gras*/\n   color:red; /*de couleur rouge, on aurait aussi pu utliser \"color: #FF0000\" */\n   font-decoration: underline; /*soulignés/*\n }</pre><p>Teste et regarde comme c’est joli. Oublie pas d’insérer des liens dans ta page quand même.</p>\n<p>Si tu changes le lien a par le titre h1 dans ta feuille de style, ce seront les titres h1 qui s’afficheront de cette manière. Si une taille de police n’est pas définie (en l’occurence avec la propriété font-size), le navigateur prendra la tailla par défaut.</p>\n<p>Teste et regarde comme c’est joli.</p>\n<p>Maintenant, tu aimerais mettre ta page au centre, avec une largeur fixe de 780px; une bordure grise, le fond contenu blanc mais celui du site gris clair. On va utiliser les propriétés width pour la largeur, margin pour centrer la page, border pour la bordure et background pour les arrière-plans.</p>\n<pre>\nhtml { /*toute la page*/\n    background: #D0D0D0; /*c'est du gris clair*/\n}\nbody { /*l'endroit ou c'est écrit*/\n    width: 780px;\n        /*largeur de la page. S'il n'y a pas de largeur, il ne va\n        pas la centrer vu qu'elle prendra toute la fenêtre.*/\n    margin:auto;\n        /* auto = page centrée, on pourrait mettre 40px elle aurait\n        une marge de 40px, et donc pas centrée. Essaie !*/\n    border: 1px solid grey;\n        /* Une bordure grise de 1px, du style solid (un trait simple) */\n    background: white;\n        /*C'est du blanc qui ira par dessus le gris foncé du html*/\n} /*fin du paramètrage du body/*</pre><p>Et sans les commentaires invasifs :</p>\n<pre>\nhtml {\n    background: #D0D0D0;\n}\nbody {\n    width: 780px;\n    margin:auto;\n    border: 1px solid grey;\n    background:white;\n}</pre><p>Teste et regarde comme c’est joli.</p>\n<p>Si t’as écrit qu’une ligne de texte, tu peux essayer d’augmenter la hauteur du body en utilisant la propriété height (pour hauteur) en y spécifiant des pixels ou un pourcentage. Les propriétés height et width peuvent également s’utiliser sur des images.</p>\n<p>Se rappeler de tous les détails du CSS n’est pas facile, et même les pros se dotent d’une feuille de rappel pour les propriétés les moins utilisées. Le site du Zero, comme toujours excellent, propose une liste explicative des propriétés CSS suffisante pour faire 99% du travail d’un webdesigner.</p>\n<p>Maintenant que tu sais comment ça marche, il faut tester, rater, recommencer, réussir, être content, essayer du nouveau, rater, réussir, mais le plus dur, c’est de comprendre le système, et j’espère que je vous ai éclairé un peu.</p>\n<p>Vu la quantité de documentation sur le net quant aux propriétés CSS, je ne vais pas m’attarder et te laisser trifouiller.</p>\n",
        "cat": "Web",
        "pub_date": "2010-06-07T01:00:00+02:00",
        "tags": "XHTML,CSS",
        "lang": "fr",
        "id": "25"
    },
    {
        "title": "Introduction au XHTML",
        "slug": "/introduction-au-xhtml",
        "teaser": "",
        "body": "<p>Loutre que tu es, tu aimerais connaître les bases du XHTML <em>(Extensible HyperText Markup Language)</em> qui est en fait du HTML, mais avec le X. Cet article a pour but d’aider les plus débutants d’entre nous à comprendre la logique du CSS et du HTML d’une façon conviviale. On va y voir les balises HTML les plus courantes ainsi que leur fonctionnement. Dans un deuxième temps, on va voir comment fonctionne le CSS avec le XHTML, mais cela sera sujet à un futur article.</p>\n<p><!--break--></p>\n<h3>Le XHTML</h3>\n<p>Les bases de HTML et de XHTML sont les mêmes, mais une page écrite en XHTML doit être bien écrite, c’est-à-dire que la syntaxe est différente.</p>\n<p>Premièrement, les balises. C’est ce qui permet de définir le langage XML (le XHTML a une syntaxe XML). En gros, c’est des <em>&lt;qqch&gt;</em> avec certaines options, suivis de contenu, suivis de <em>&lt;/qqch&gt;</em> sans options.</p>\n<p>Voici un exemple de balise, la plus courante vu qu’elle est sur toutes les pages web XHTML, qu’ils aient du contenu ou pas.</p>\n<pre>\n&lt;html&gt;\n\n*contenu*\n\n&lt;/html&gt;</pre><p>Ce sont simplement les balises qui définissent la page. À l’intérieur de ces balisent, on y met les balises<em> &lt;head&gt;&lt;/head&gt;</em>, et les balises <em>&lt;body&gt;&lt;/body&gt;. </em>Ce sont les balises de <strong>premier niveau.</strong></p>\n<p>Dans les balises <em>&lt;head&gt;</em>, on y met des <strong>balises d’entête</strong><em> </em>comme <em>&lt;title&gt;&lt;/title&gt;</em>, qui définissent le titre de la page, les balises <em>&lt;meta /&gt;</em> qui est en fait une balise unique qui ne prend pas de contenu, mais que des options. On n’a donc pas de deuxième balise, mais une balise qui se ferme toute seule comme une grande. (Comme la balise image <em>&lt;img /&gt;</em> qu’on verra par la suite)</p>\n<p>On a aussi une balise &lt;style&gt;&lt;/style&gt;. A l’intérieur, on y place des éléments CSS pour définir les styles et la mise en page.</p>\n<p>D’autres balises sont également utilisées, comme la balise <em>link </em>(pour la gestion du favicon, d’une feuille CSS externe, ou des flux RSS)</p>\n<p>Voici une page XHTML vide, ce sur quoi je me base pour créer une nouvelle page :</p>\n<pre>\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n\n&lt;head&gt;\n\n&lt;title&gt;Nouvelle page d'exemple XHTML&lt;/title&gt;\n&lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" /&gt;\n&lt;style&gt;\n\n&lt;/style&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</pre><p>Petite parenthèse sur le <em>Doctype</em> à la première ligne. On remarque qu’il s’agit d’un document XHTML 1.0 Strict. On est donc obligés de mettre du contenu formatté en XHTML 1.0 Strict, ce qui veut dire (en gros) que s’il y a une erreur de syntaxe dans le document, la page ne va premièrement pas passer les tests de validation W3 – qui servent à voir si une page est valide, si si – ce qui entraîne le point suivant : il y a des chances pour que certains navigateurs n’affichent pas correctement ta page, et c’est pas ce que tu veux, si ?</p>\n<h3>Premier essai de page</h3>\n<p>Bon, on va commence simplement. Tout ce qu’il te faut, c’est un logiciel de traitement de texte du style Gedit, même le bloc-note sous windows ira très bien.</p>\n<p>Recopie le contenu de la page ci-dessus dans le bloc note, et enregistre le fichir sous <em>mapage.html</em>. Maintenant, si tu ouvres la page avec ton navigateur, il ne va rien afficher du tout, c’est tout à fait normal, il n’y a rien dedans. On va donc y mettre du contenu, contenu qui se met entres les balises <em>&lt;body&gt;</em> et <em>&lt;/body&gt;</em>.</p>\n<h4>Les titres</h4>\n<p>Il y a différents titres possible en XHTML. Du plus gros titres, entres les balises <em>&lt;h1&gt; &lt;/h1&gt;</em> au plus petit &lt;h6&gt;. Il faut donc bien choisir son titres en fonction de son utilité à l’intérieur de sa page.</p>\n<p>On va donc rajouter un titre, en les balises <em>body.</em></p>\n<pre>\n&lt;h1&gt;Ma première page&lt;/h1&gt;</pre><p>Bon, OK, le titre est pourri. Mets-y ce que tu veux à la place. Enregistre et rouvre la avec ton navigateur. Surprise ! Enfin, c’est normal en même temps. Si t’as le temps et l’envie, mais c’est pas nécessaire, tu peux tester les différents niveaux de titres (<em>h1 </em>à <em>h6) </em>pour voir les différences.</p>\n<p>C’est bien joli d’avoir un ou des titres dans sa page, mais nous, ce qu’on veut c’est du contenu ! Pour avoir du contenu, on va rajouter des paragraphes.</p>\n<h4>Les paragraphes</h4>\n<p>Les paragraphes se mettent dans les balises <em>p, </em>tout simplement</p>\n<pre>\n&lt;p&gt;Je suis un paragraphe très court&lt;/p&gt;</pre><p>Quelque chose qu’il faut comprendre dès à présent, c’est qu’on ne met <strong>jamais</strong> de texte directement dans <em>&lt;body&gt;</em>, mais on va toujours utiliser des balises de type <strong>block</strong>. du style <em>p</em>, <em>li</em> (pour les listes), <em>span</em>, etc. Plus simplement : le texte va se mettre à la ligne. Pour du texte simple non mis-en forme, on fera donc simplement un paragraphe.</p>\n<h4>La mise en forme</h4>\n<p>Généralement, on utilise le CSS pour mettre en forme du texte ou du contenu. Mais on utilise parfois aussi quelques balises pour par exemple mettre en gras juste <strong>un mot</strong>. La balise utilisée ici est la balise <em>&lt;strong&gt;</em>, qui se met toujours dans une balise de type inline. Une autre balise c’est <em>em</em> pour emphasis, ça permet, par défaut sans modification dans le CSS, de mettre du texte en <em>italique.</em></p>\n<p>Il est possible de transformer des block en inline et vice-versa, c’est très pratique dans la mise en page. Tout cela se fait avec le CSS. Tu peux dès à présent tester ces quelques trucs sur ta première page.</p>\n<h3>Les autres choses pratiques en XHML</h3>\n<p>Voici une liste de balises qu’il est bon de savoir pour mettre en place une page conventionnelle.</p>\n<h4>Les listes</h4>\n<p>Les balises &lt;ul&gt; et &lt;li&gt;. &lt;ul&gt; marque le début d’une liste, &lt;li&gt; marque le début d’un point de la liste, &lt;/li&gt; marque la fin du point de la liste, et &lt;/ul&gt; marque le point de la liste. Ce qui est pratique avec ce système, c’est qu’on peut mettre des &lt;ul&gt; à l’intérieur d’un &lt;li&gt;, pour faire une liste à plusieurs niveaux du genre :</p>\n<ul><li>Point 1, premier niveau</li>\n<li>Point 2, premier niveau</li>\n<li>\n<ul><li>Point 1, Deuxième niveau</li>\n<li>Point 2, Deuxième niveau</li>\n</ul></li>\n<li>Point 3, premier niveau</li>\n</ul><p>Voici le code utilisé :</p>\n<pre>\n&lt;ul&gt;\n&lt;li&gt;Point 1, premier niveau&lt;/li&gt;\n&lt;li&gt;Point 2, premier niveau&lt;/li&gt;\n&lt;li&gt;\n&lt;ul&gt;\n&lt;li&gt;Point 1, Deuxième niveau&lt;/li&gt;\n&lt;li&gt;Point 2, Deuxième niveau&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;Point 3, premier niveau&lt;/li&gt;\n&lt;/ul&gt;</pre><p>Avec une mise en page CSS, il est possible, avec ces listes, de créer des menus déroulants, verticaux ou horizontaux.</p>\n<h4>Les images</h4>\n<p>Un site web sans image, c’est comme … un site web sans images. Ça attrire pas l’oeil. D’ailleurs, j’vais ajouter une image pour attirer l’oeil.</p>\n<p>Avec une image, on va introduire le concept des <strong>options</strong> à l’intérieur des balises. Dans la balise de l’image <em>&lt;img&gt;</em> on a deux options obligatoires : src et alt</p>\n<p><em>src</em> sert à mettre la SouRCe de l’image, comme son nom l’indique. On va donc y mettre une URL de type <em><a href=\"http://www.site.com/dossier_farfelu/mon_image.png\">http://www.site.com/dossier_farfelu/mon_image.png</a></em>. Tu peux également y mettre un lien du style <em>mon_image.png</em>, mais ceci est possible qu’à condition que l’image soit dans le même dossier que la page.</p>\n<p>Voici un exemple de code d’image :</p>\n<pre>\n&lt;img src=\"http://www.loutre.ch/loutre.jpg\" alt=\"Loutre\" /&gt;</pre><p>La balise img est de type <strong>inline</strong>, elle doit donc obligatoirement être dans une balise de type <strong>block</strong> tel que <em>p.</em></p>\n<p>L’option « alt » indique un texte alternatif à l’image. Obligatoire dans le doctype XHTML 1.0 Strict, elle permet aux navigateurs sans images d’afficher ce texte à la place. C’est également utilisé pour l’accessibilité aux personnes malvoyantes qui ont des navigateurs dits « parlants ».</p>\n<p>D’autres options sont possibles, tels que l’option title qui affiche un titre à l’image (en l’occurence quand on passe le curseur sur l’image).</p>\n<h4>Les liens</h4>\n<p>Un lien permet de lier (ouah) une page à une autre page ou à un autre site web.</p>\n<p>La balise se forme de la façon suivante :</p>\n<pre>\n&lt;a href=\"lien\"&gt;Ce qui est affiché&lt;/a&gt;</pre><p>Par exemple</p>\n<pre>\n&lt;a href=\"http://www.perdu.com\"&gt;Tu est perdu ?&lt;/a&gt;</pre><p>Donne : Tu est perdu ?</p>\n<p>Comme avant, une balise de type <strong>block</strong> est obligatoire pour mettre un lien. Le lien peut, comme l’image, n’être qu’une page au lieu de l’url complète, à condition que la page se situe sur le même serveur.</p>\n<p>Il y a la possibilité d’afficher une « image-lien » : il suffit de placer la balise image à l’intérieur de la balise lien, comme cela :</p>\n<pre>\n&lt;a href=\"mapage.html\"&gt;&lt;img src=\"loutre.jpg\" alt=\"Une loutre\" /&gt;&lt;/a&gt;</pre><p>Ce lien va ouvrir la page « mapage.html » (donc <a href=\"http://www.loutre.ch/mapage.html »\">www.loutre.ch/mapage.html »</a>, si elle existait) avec l’image « image.jpg » (donc <a href=\"http://www.loutre.ch/loutre.jpg\">www.loutre.ch/loutre.jpg</a>). Il y a possibilité de mettre un chemin à la place de seulement le lien ou l’image, par exemple</p>\n<pre>\n&lt;a href=\"<strong>mes_pages</strong>/mapage.html\"&gt;&lt;img src=\"<strong>mes_images</strong>/loutre.jpg\" alt=\"Une loutre\" /&gt;&lt;/a&gt;</pre><p>La page ne serait donc plus à la racine du site, mais dans le dossier <strong>mes_pages,</strong> et l’image serait dans un dossier <strong>mes_images</strong>. C'est ce qu'on appelle un chemin <strong>relatif</strong>.</p>\n<p>Généralement, on utilise les chemins <strong>relatifs</strong> pour les pages en local, et les urls complètes (ou chemins <strong>absolus</strong>) pour afficher des images ou pour lier des pages d’autres sites web.</p>\n<p>Et maintenant au tour du CSS de se trouver une place dans le XHTML !</p>\n",
        "cat": "Web",
        "pub_date": "2010-06-06T00:00:00+02:00",
        "tags": "XHTML,code",
        "lang": "fr",
        "id": "21"
    },
    {
        "title": "Installer un serveur ftp chrooté avec vsftpd en 5 minutes",
        "slug": "/installer-un-serveur-ftp-chroote-avec-vsftpd-en-5-minutes",
        "teaser": "",
        "body": "<p>Tu as un serveur web, et tu aimerais bien héberger le site web d’un(e) ami(e), d’un(e) collègue. Seul petit hic : cette personne (appelons-là Sophie), ne doit pas pouvoir : 1) se logguer en SSH et 2) avoir accès à tout le système de fichier Linux.</p>\n<!--break--><p>Un simple accès sftp non-configuré (qui est disponible avec openssh) est donc exclu. Évidemment, on arriverait à un résultat \"plus propre\" si Sophie avait un client ftp qui gère le sftp, mais disons qu'elle n'en a pas.</p>\n<p>On utilisera donc vsftpd, un serveur ftp simple, sécurisé et efficace qui permet de limiter l’accès au système d’exploitation avec chroot simplement en paramètrant son fichier de configuration.</p>\n<p>Commence par installer le serveur ftp :</p>\n<p>Sous Debian :</p>\n<pre>\n# aptitude install vsftpd</pre><p>Une fois installé, modifie les éléments suivants du fichier de configuration /etc/vsftpd.conf :</p>\n<pre>\n# Empêcher les connexions anonymes\nanonymous_enable=NO\n\n# Activer les utilisateurs du système Linux (utilisateurs du fichier /etc/passwd)\nlocal_enable=YES\n\n# Activer la possibilité d'écriture de fichiers sur le ftp (et pas seulement de lecture)\nwrite_enable=YES\n\n# chrooter tous les utilisateurs qui utilisent vsftpd\nchroot_local_user=YES</pre><p>Voilà, le serveur ftp est configuré. Après, on peut très bien faire des choses plus avancées comme par exemple limiter les utilisateurs autorisés à utiliser vsftpd :</p>\n<pre>\nman vsftpd.conf</pre><p>Deuxième chose à faire maintenant, c’est de créer un compte utilisateur à sophie, mais qui soit un compte qui ne peut pas se connecter au shell via ssh. Son dossier personnel sera utilisé pour son ftp.</p>\n<p>On a donc le choix, soit un crée un dossier personnel standard (/home/sophie), soit on crée /var/www/sophie pour simplifier la configuration d’apache par la suite. On peut aussi faire un lien symbolique du répertoire /home/sophie vers /var/www.</p>\n<pre>\n# useradd -d /var/www/sophie -s /usr/sbin/nologin sophiee\n# passwd sophie</pre><p>Cette commande crée, avec l’option -d, le<em> home directory</em> ou le dossier personnel de sophie dans /var/www/sophie/ et met comme shell par défaut /usr/bin/nologin qui est en fait un utilitaire empêchant la connexion au compte utilisateur sur la machine directement.</p>\n<p>La commande passwd donne le mot de passe de Sophie. Mets-y quelque chose de compliqué, mais pas trop, n’oublions pas que Sophie ne sait pas pourquoi un mot de passe complexe c’est important et pourrait vous détester par la suite.</p>\n<p>Un petit truc en plus : il faut modifier le fichier /etc/shells car il ne contient pas encore le shell nologin. Rajoute</p>\n<pre>\n/usr/sbin/nologin</pre><p>à la fin du fichier.</p>\n<p>Restarte le serveur vsftpd :</p>\n<pre>\n# /etc/init.d/vsftpd restart</pre><p>C’est déjà fini ! Sophie aura accès, si elle a les permissions, à tous les fichiers se situant dans son dossier personne via ftp. Reste à configurer les quotas, mais ça, c’est une autre paire de manches.</p>\n<p>Source</p>\n",
        "cat": "Linux, Web",
        "pub_date": "2010-03-30T00:00:00+02:00",
        "tags": "FTP,vsftpd",
        "lang": "fr",
        "id": "26"
    },
    {
        "title": "Mémo : Commenter plusieurs lignes d’un coup avec VIM",
        "slug": "/memo-commenter-plusieurs-lignes-dun-coup-avec-vim",
        "teaser": "",
        "body": "<p>C’est toujours le bordel pour commenter tout un bloc d’un fichier de configuration sans devoir taper 134 dièses.<br />Voici la méthode VIM.</p>\n<!--break-->\n<ol><li><strong>CTRL+V</strong> sur le premier caractère de la première ligne à commenter, puis sélectionner toutes les lignes voulues avec la flèche du bas ou la touche <strong>J</strong></li>\n<li><strong>Maj+i</strong> (<strong>I </strong>majuscule)</li>\n<li>Insérer le caractère de commentaire (<strong># </strong>ou<strong> //</strong> ou n’importe quoi d’autre )</li>\n<li><strong>Esc</strong>,<strong> Esc</strong></li>\n</ol><p><strong>EDIT: </strong>Pour mapper une commande directement :</p>\n<pre>\nmap ,# :s/^/#/&lt;CR&gt;</pre><p>On peut très bien mettre cela dans le <strong>.vimrc</strong> pour faire en sorte que le mapping se fasse à chaque lancement de vim.</p>\n<p>Lorsqu’on selectionne du texte en visual mode, on peut ensuite taper <strong>,</strong> (virgule) puis <strong>#</strong> et ça rajoutera un # en début de ligne.<br />(Merci raph et wikia qui nous explique bien comment ça marche)</p>\n",
        "cat": "Linux",
        "pub_date": "2009-07-29T00:00:00+02:00",
        "tags": "script,vim",
        "lang": "fr",
        "id": "23"
    },
    {
        "title": "Linux : Monter un partage FTP avec FUSE / Curlftpfs",
        "slug": "/linux-monter-un-partage-ftp-avec-fuse-curlftpfs",
        "teaser": "",
        "body": "<p>Installe curlftpfs (méthode Debian/Ubuntu)</p>\n<pre>\n$ sudo aptitude install curlftpfs</pre><p>Crée le dossier où tu veux monter le partage :</p>\n<pre>\n$ mkdir partageftp</pre><p>Pour le montage en question:</p>\n<pre>\n$ curlftpfs ftp://user:password@ftpserver partageftp</pre><p>user, password et ftpserver sont des données que t’es sensé connaître pour accéder au FTP.</p>\n<p>Si tu n’as pas les droits, vérifie le fichier /etc/group pour voir si ton utilisateur est bien dans le groupe fuse.</p>\n<pre>\n$ cat /etc/group | grep fuse</pre><p>S’il n’est pas dedans :</p>\n<pre>\n$ usermod -a -G fuse tonnomdutilisateur</pre><p>Et voilà, tu devrais pouvoir accéder au FTP en passant par ton dossier local !</p>\n",
        "cat": "Linux",
        "pub_date": "2009-07-28T00:00:00+02:00",
        "tags": "Curlftpfs,FTP,FUSE,Montage",
        "lang": "fr",
        "id": "24"
    },
    {
        "title": "Drupal : Insérer une vue dans un noeud",
        "slug": "/drupal-inserer-une-vue-dans-un-noeud",
        "teaser": "",
        "body": "<p>Il est intéressant d'inclure ses vues dans un noeud entre autres lorsque : </p>\n<ul><li>la vue est linkée dans le menu principal : Le \"menu item\" n'est pas traduisible.</li>\n<li>vous désirez mettre du contenu différent en plus. On est obligé de passer par les options \"en-tête\" ou \"pied de page\" dans les paramètres de la vue, et c'est la misère pour le traduire.{C}<br /><!--break--></li>\n</ul><p>Grâce à cette solutions élégante et conviviale, il suffit de créer un <strong>noeud</strong> (une page par exemple), de mettre le contenu qu'on veut puis un <strong>tag</strong> pour que la vue s'affiche, telle une simple fonction \"include\".</p>\n<p>On va utiliser le module \"<strong>Insert View</strong>\" disponible sur le site officiel. Après l'avoir téléchargé au bon endroit, installé et activé, tu peux aller configurer les formats d'entrée (Configuration - input formats). Dans les options de chacun d'eux, active \"Insert view\". Maintenant, quand tu crées du contenu, il suffit d'entrer les <strong>tags</strong> suivants pour afficher ce que tu veux :</p>\n<p><strong>[view:nom_de_la_vue]</strong> est remplacé par la vue<br /><strong>[view:nom_de_la_vue=nom_du_display]</strong> est remplacé par le display spécifique de la vue</p>\n<p>Plus d'options sont disponibles dans le README.TXT du module.</p>\n<p>Source : drupal.org</p>\n",
        "cat": "Web",
        "pub_date": "2009-07-01T00:00:00+02:00",
        "tags": "Drupal,views",
        "lang": "fr",
        "id": "31"
    },
    {
        "title": "La messagerie Facebook sans ouvrir votre navigateur web, avec Pidgin",
        "slug": "/la-messagerie-facebook-sans-ouvrir-votre-navigateur-web-avec-pidgin",
        "teaser": "",
        "body": "<p>Pidgin pour chatter sur Facebook, sans navigateur. Permet de garder contact sans devenir accro.</p>\n<!--break-->\n<p>On connaît tous Pidgin, le fameux pigeon mal écrit (au niveau orthographique). Toutefois, pour ceux qui ne le connaissent pas, c’est un client (donc un logiciel à installer sur, en l’occurence, son propre ordinateur qui va se connecter à un serveur) de messagerie instantanée (donc comme msn berk, mais en mieux) multi-protocole (qui supporte pas seulement msn, mais aussi jabber, yahoo, irc, etc.) et multi-plateforme (fonctionne aussi bien sous GNU/Linux que sous windows).</p>\n<p>Dernièrement, je tombe sur un article agrégé sur Planet-libre. La personne a installé le client de messagerie de Facebook sur Pidgin !</p>\n<p>Je lance donc la commande qui installe le plugin pour pidgin, sous Ubuntu (sur la 9.04) :</p>\n<pre>\n$ sudo aptitude install pidgin-facebookchat</pre><p>Il a suffit de relancer Pidgin et de créer un nouveau compte (comptes, gérer les comptes, ajouter). Là, dans la liste des protocoles, on voit Facebook. Ça marche très bien. On voit le statut et la photo des gens, on peut changer son propre statut, etc.</p>\n<p>Quand on ouvre une page facebook lorsqu’on communique avec une personne via Pidgin, la conversation s’affiche dans le navigateur en même temps que dans la fenêtre de conversation. Par contre, lorsqu’on répond via le site web, rien ne se passe au niveau de Pidgin. Mais bon, on peut pas tout avoir.</p>\n",
        "cat": "Linux, Logiciel libre",
        "pub_date": "2009-05-07T00:00:00+02:00",
        "tags": "Pidgin,messagerie,Facebook,Ubuntu",
        "lang": "fr",
        "id": "22"
    }

]